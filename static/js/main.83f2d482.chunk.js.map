{"version":3,"sources":["pages/Statistic/Statistic.module.scss","components/wrapped/Layout/Layout.module.scss","components/wrapped/WrappedSearch.module.css","components/Form/SearchForm.module.css","components/selected/SelectedHeader.module.scss","pages/AddNewPage/AddNewPage.module.scss","pages/Statistic/MappedStatistic.module.scss","pages/EdditPage/FormikEditOne.module.scss","pages/Main/EnhancedTableToolbar.module.css","components/EditableSpanText/EditableSpanText.module.scss","components/EditableSpanText/EditableMitingLeader.module.scss","pages/Statistic/StatisticOneTable.module.scss","components/wrapped/BackDrop/BackDrop.module.scss","store/TableReducer/TableType.ts","store/AuthReducer/ProfileReducer.ts","Api/Api.ts","store/appReducer/AppReducer.ts","store/AuthReducer/AuthReducer.ts","helper/error-handler.ts","helper/helper.tsx","store/TableReducer/TableReducer.ts","data.ts","pages/EdditPage/formikEditOne.tsx","pages/EdditPage/EdditPage.tsx","utils/selectors.ts","components/wrapped/WrappedSearch.tsx","components/Form/SearchForm.tsx","pages/Main/EnhancedTableToolbar .tsx","components/EditableSpanText/EditableSpanText.tsx","components/selected/SelectedHeader.tsx","components/TableHeader/FilteredHeader.tsx","utils/ConstOptions.ts","components/TableHeader/TableHeader.tsx","components/TablePaginator/TablePaginator.tsx","components/EditableSpanText/EditableStatusTotal.tsx","components/EditableSpanText/EditableMitingLeader.tsx","pages/Main/TablePage.tsx","components/SnackbarRoot/SnackbarRoot.tsx","pages/AddNewPage/AddNewPage.tsx","pages/Auth/Auth.tsx","store/statisticReducer/statisticReducer.ts","routes/Routes.tsx","pages/Statistic/Row.tsx","pages/Statistic/MappedStatistic.tsx","pages/Statistic/StatisticOneTable.tsx","pages/Statistic/Statistic.tsx","components/wrapped/BackDrop/BackDrop.tsx","components/wrapped/menuToggle.tsx","components/Header.tsx","components/wrapped/Layout/Layout.tsx","app/App.tsx","reportWebVitals.ts","store/store.ts","index.tsx","pages/Main/TablePage.module.scss","pages/Statistic/Row.module.scss","components/wrapped/MenuToggle.module.scss"],"names":["module","exports","OrderEnum","SortEnum","StatusEnum","TotalEnum","StatusFetchEnum","PositionEnum","ActionType","axiosInstance","axios","create","baseURL","withCredentials","ApiAuth","email","password","rememberMe","post","ApiCandidatePack","candidatesPack","user_id","packName","searchStatus","searchTotal","searchPosition","sortPacks","get","params","candidatePack","put","initialState","profile","setProfileAc","type","SET_PROFILE","payload","ProfileReducer","state","action","CLEAN_PROFILE","isInitial","disabledBtn","setDisabledBtn","SET_DISABLED_BTN","HelperErrorCatch","e","dispatch","error","response","data","message","console","log","setErrorMes","setStatusAC","FAIL","isLogin","status","errorMes","setLoginAC","SET_LOGIN","SET_STATUS","SET_ERROR_MES","AuthReducer","makeStyles","createStyles","root","alignItems","lineHeight","width","height","position","display","whiteSpace","overflow","textOverflow","Intl","DateTimeFormat","hour","minute","currentDate","year","day","month","setYear","trim","arrDate","split","map","el","Date","toISOString","smartSorting","rows","typeSorting","sortByValue","keyValue","NUMBER","ASC","sort","a","b","STRING","toLowerCase","DATE","dateA","getTime","BOOLEAN","headCells","id","numeric","label","sorting","edditRows","OK","totalPacks","addSearchStatus","value","ADD_SEARCH_STATUS","addSearchTotal","ADD_SEARCH_TOTAL","addSearchPosition","ADD_SEARCH_POSITION","setStatus","SET_FETCH_STATUS","getPacksThunk","getState","LOADING","tableRows","res","candidatesPacks","FETCH_CANDIDATES_PACK","totalCount","SET_TOTAL_COUNT","updatePack","userId","_id","FormikEditOne","row","useDispatch","optionsArrayStatus","NO","THINK","optionsArrayTotal","OFER","CANSEL","CANSEL_LID","TRANING","optionsArrayPosition","KARATIST","SLESAR","PRESIDENT","TRACTORIS","useSelector","formik","useFormik","initialValues","date","format","reverse","join","time","name","meeting","recommendation","leaderInterview","phone","total","SS","onSubmit","values","rowId","currentSS","newObject","parse","CLEAR_EDIT_TABLE","resetForm","CircularProgress","className","style","container","handleSubmit","FormControl","FormGroup","TextField","InputLabelProps","shrink","getFieldProps","inputProps","step","select","variant","margin","option","MenuItem","required","mask","disabled","FormControlLabel","control","Checkbox","checked","Button","color","EditPage","useEffect","length","selectDisableBtn","app","getRowArray","getStatistic","statistic","statisticArray","WrappedSearch","closeProps","children","cls","close","open","SearchForm","setCurrentSearchName","useState","setValue","timerId","setTimerId","clearTimeout","start","window","setTimeout","mainWrap","textField","onChange","currentTarget","onChangeHandler","IconButton","aria-label","onClick","useToolbarStyles","theme","paddingLeft","spacing","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","props","classes","numSelected","setOpen","Toolbar","clsx","Typography","component","Tooltip","to","RoutingType","ADD","linkAdd","EDIT","ArrayId","selected","EDIT_TABLE_ROW","EditableSpanText","React","memo","editMode","setEditMode","setTitle","changeTitle","activateViewMetod","onChanges","idRow","typeSpan","autoFocus","onBlur","defaultValue","blured","onDoubleClick","editSpan","useStyles","button","marginTop","formControl","minWidth","SelectedHeader","filtered","optionsArray","setCloseFilteredIcon","dispath","InputLabel","Select","labelId","onClose","onOpen","event","target","index","FilteredHeader","size","fontSize","fileredSpan","fileredSpanOpen","fileredSpanClose","TableHeader","onRequestSort","handlerSorting","TableHead","TableRow","TableCell","padding","headCell","align","divHeader","wrappedFilter","order","DESK","useStyles1","flexShrink","marginLeft","TablePaginationActions","useTheme","count","page","rowsPerPage","onChangePage","direction","Math","ceil","max","extendedIcon","marginRight","EditableStatusTotal","openControl","setOpenControl","EditableMitingLeader","cheched","onChangeBoolean","check","setCheck","auth","wrapper","createMuiTheme","overrides","MuiTableCell","useStyles2","paper","marginBottom","table","visuallyHidden","border","clip","top","TablePage","setPage","setRowsPerPage","setSelected","setOrder","orderBy","setOrderBy","typeSort","setTypeSort","currentsearchName","stableDispatch","useCallback","LOGIN","changeInputSsHandler","ssValue","currentSs","filteredByName","filter","includes","changeInputRecHandler","EDIT_VALUE_ROW","editRecommendationValue","changeInputStatus","changeInputTotal","changeMeetingCheck","changeLeaderCheck","Box","Paper","ThemeProvider","TableContainer","Table","onSelectAllClick","newSelecteds","n","rowCount","TableBody","divSpinner","slice","isItemSelected","indexOf","tabIndex","role","hover","selectedIndex","newSelected","concat","handleClick","scope","TableFooter","TablePagination","rowsPerPageOptions","colSpan","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","Alert","elevation","SnackbarRoot","handleClose","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","severity","AddNewPage","first","setFist","validate","errors","replace","reason","touched","btn","Copyright","Link","href","getFullYear","flexDirection","avatar","form","submit","Auth","test","setLoginT","MAIN","Container","maxWidth","CssBaseline","Avatar","fullWidth","handleBlur","autoComplete","Grid","item","xs","mt","Row","statisticPosition","budget","setBudget","currentBudjet","setCurrentBudjet","openSiting","setOpenSiting","mappedKeys","Object","keys","Fragment","siting","Collapse","in","timeout","input","statisticWrap","wrapTitle","numWrap","numStatistic","current","totalPosition","round","currentBudget","num","MappedStatistic","rowsStatist","dateStart","dateFin","finDat","filteredArray","totalComing","totalSucsesStatus","totalSucsesTotal","totalCommingJob","totalComming","arrayCandidate","btnClose","DELETE_STATISTIC_TABLE","deleteStatistic","unmountOnExit","gutterBottom","wrappItem","StatisticOneTable","setFirst","startSelectedDate","setStartSelectedDate","finishSelectedDate","setFFfinishStartSelectedDate","utils","DateFnsUtils","autoOk","clearable","disableFuture","KeyboardButtonProps","ffilter","rowStatist","SET_FILER_TABLE","setFiler","Statistic","ADD_NEW_STATISTIC_TABLE","v4","content","Routes","exact","path","render","STATISTIC","BackDrop","s","MenuToggle","Header","isOpen","push","clickHandler","activeClassName","active","flexGrow","menuButton","onToggle","AppBar","edge","Layout","menu","setMenu","App","SET_INITIAL_APP","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","fileredArray","EDIT_TABLE_ROW_SUCSESS","newArray","tl","ADD_NEW_TABLE","newArr","find","newEl","middleware","applyMiddleware","thunkMiddleware","store","createStore","composeWithDevTools","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.83f2d482.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Statistic_main__l7vk4\",\"title\":\"Statistic_title__2ggiv\",\"content\":\"Statistic_content__1sWHR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"Layout_dark__2kar-\",\"dark-text\":\"Layout_dark-text__2meLJ\",\"red\":\"Layout_red__1VQhA\",\"red-text\":\"Layout_red-text__2Rhbt\",\"some\":\"Layout_some__1nHN1\",\"some-text\":\"Layout_some-text__3WIt8\",\"content\":\"Layout_content__3mRzj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"open\":\"WrappedSearch_open__3mwba\",\"close\":\"WrappedSearch_close__35FPD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrap\":\"SearchForm_mainWrap__QFbRe\",\"textField\":\"SearchForm_textField__2j4ss\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"close\":\"SelectedHeader_close__1ZUEk\",\"open\":\"SelectedHeader_open__JnORO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddNewPage_container__3btue\",\"btn\":\"AddNewPage_btn__FzZuB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrappItem\":\"MappedStatistic_wrappItem__3NOYC\",\"btnClose\":\"MappedStatistic_btnClose__2JDAi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avtocomplite\":\"FormikEditOne_avtocomplite__1oMGy\",\"mainWrapper\":\"FormikEditOne_mainWrapper__2v48M\",\"wrapperBtn\":\"FormikEditOne_wrapperBtn__1DEsv\",\"itemWrapper\":\"FormikEditOne_itemWrapper__Yd80M\",\"container\":\"FormikEditOne_container__29GWw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkAdd\":\"EnhancedTableToolbar_linkAdd__2rxrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editSpan\":\"EditableSpanText_editSpan__2tXai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EditableMitingLeader_wrapper__1BFJ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siting\":\"StatisticOneTable_siting__382EU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop_BackDrop__YvKE0\"};","\r\nexport type StatusType = 'подошел' | 'отказ' | 'думает';\r\nexport type TotalType = 'Выход на работу' | 'Стажировка'| 'Отказ' | 'Отк-Рук';\r\nexport type TypeSort = 'string' | 'number' | 'date' | 'boolean';\r\nexport type PositionType = 'Тракторист' | 'Каратист' | 'Президент' | 'Слесарь';\r\nexport type RequestStatusType = 'loading' | 'succeeded' | 'failed'\r\nexport type TableRowType = {\r\n    [key: string]: any\r\n    SS: string | null,\r\n    created: string\r\n    date: string,\r\n    leaderInterview: boolean | null,\r\n    more_id: string\r\n    name: string,\r\n    path:string\r\n    recommendation: string,\r\n    status:StatusType | '',\r\n    total: TotalType | '',\r\n    phone: string\r\n    type: string\r\n    updated:string\r\n    user_id:string\r\n    user_name: string\r\n    __v: number\r\n    _id: string,\r\n\r\n    position: PositionType,\r\n    meeting: boolean,\r\n}\r\n\r\n\r\nexport type Order = 'asc' | 'desc';\r\n\r\nexport enum OrderEnum {\r\n    ASC= 'asc',\r\n    DESK = 'desc'\r\n}\r\nexport type HeadCellsType = {\r\n    id: string,\r\n    numeric: boolean,\r\n    label: string,\r\n    sorting: boolean,\r\n    typeSorting: TypeSort | null,\r\n\r\n\r\n}\r\n\r\nexport enum SortEnum {\r\n    STRING = 'string',\r\n    NUMBER = 'number',\r\n    DATE = 'date',\r\n    BOOLEAN = 'boolean'\r\n}\r\nexport enum StatusEnum {\r\n    OK = 'подошел',\r\n    NO = 'отказ',\r\n    THINK = 'думает'\r\n}\r\n\r\nexport enum TotalEnum{\r\n    OFER= 'Выход на работу',\r\n    CANSEL = 'Отказ',\r\n    CANSEL_LID = 'Отк-Рук',\r\n    TRANING = 'Стажировка'\r\n}\r\nexport enum StatusFetchEnum {\r\n    OK = 'succeeded',\r\n    LOADING = 'loading',\r\n    FAIL = 'failed'\r\n}\r\n\r\nexport enum PositionEnum {\r\n    TRACTORIS = 'Тракторист',\r\n    KARATIST = 'Каратист',\r\n    PRESIDENT = 'Президент',\r\n    SLESAR = 'Слесарь'\r\n}","export interface stateProps {\r\n    profile: ResponseTypeProfile | null\r\n\r\n}\r\n\r\ntype ResponseTypeProfile = {\r\n    created: string\r\n    email: string\r\n    isAdmin: boolean\r\n    name: string\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime: number\r\n    updated: string\r\n    verified: boolean\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\n\r\nconst initialState = {\r\n    profile: null\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_PROFILE = 'PROFILE/SET_PROFILE',\r\n    CLEAN_PROFILE = 'PROFILE/CLEAN_PROFILE'\r\n}\r\n\r\nconst ProfileReducer = (state: stateProps  = initialState, action: ActionProfileType): stateProps  => {\r\n    switch (action.type) {\r\n\r\n        case ActionType.SET_PROFILE:\r\n            return {...state, profile: {...action.payload}}\r\n        case ActionType.CLEAN_PROFILE:\r\n            return {...state, profile: null}\r\n        default: return  state\r\n    }\r\n\r\n}\r\n\r\nexport const setProfileAc = (profile: ResponseTypeProfile ) => {\r\n    return {type: ActionType.SET_PROFILE, payload: profile} as const\r\n}\r\nexport const cleanProfile = () => {\r\n    return {type:ActionType.CLEAN_PROFILE} as const\r\n}\r\n\r\nexport type ActionProfileType = ReturnType<typeof setProfileAc> | ReturnType<typeof cleanProfile>\r\n\r\n\r\nexport default ProfileReducer","import axios from \"axios\";\r\nimport {StatusType, TotalType} from \"../store/TableReducer/TableType\";\r\n\r\nconst configOMB = {\r\n    // localBack\r\n    baseURL: \"https://crm-back-hr.herokuapp.com/\",\r\n    // heroku\r\n    // baseURL: 'http://localhost:7542/',\r\n    withCredentials: true,\r\n\r\n};\r\nconst axiosInstance = axios.create(configOMB);\r\n\r\nexport const ApiAuth = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return axiosInstance.post('auth/login', {email,password, rememberMe})\r\n    },\r\n    registration(email:string, password: string) {\r\n        return axiosInstance.post('auth/registration', {email, password})\r\n    },\r\n    authMe() {\r\n        return axiosInstance.post('auth/me')\r\n    },\r\n    logOut() {\r\n        return axiosInstance.delete('/auth/me')\r\n    },\r\n\r\n}\r\n\r\nexport const ApiCandidatePack = {\r\n    addNewCandidate(candidatesPack:candidatePackUpdate) {\r\n        return axiosInstance.post('candidates/pack', {candidatesPack:candidatesPack})\r\n    },\r\n    getCandidatesPack (user_id:string, packName?: string, searchStatus?: string, searchTotal?:string,searchPosition?:string, sortPacks?:string) {\r\n        return axiosInstance.get('candidates/pack', {params:{user_id, packName, searchStatus, searchTotal, sortPacks, searchPosition}})\r\n    },\r\n    updateCandidatesPack(candidatePack:candidatePackUpdate) {\r\n        return axiosInstance.put('candidates/pack', {candidatePack})\r\n    }\r\n}\r\n\r\n\r\nexport interface candidatePackUpdate {\r\n    name?: string\r\n    _id?: string\r\n    position?: string\r\n    status?: StatusType | ''\r\n    recommendation?: string\r\n    leaderInterview?: boolean\r\n    date?: string\r\n    phone?: string\r\n    SS?: string | null\r\n    total?: TotalType | ''\r\n    meeting?: boolean\r\n}\r\n\r\nexport interface candidatePacKAdd {\r\n    date: string,\r\n    name: string\r\n    time: string\r\n    position: string\r\n    phone: string\r\n\r\n}\r\n\r\n","export interface stateProps {\r\n    isInitial: boolean\r\n    disabledBtn: boolean\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    isInitial: false,\r\n    disabledBtn: false\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_INITIAL_APP = 'APP/INITIAL_APP',\r\n    SET_DISABLED_BTN = 'SET_DISABLED_BTN',\r\n\r\n}\r\n\r\n//actions\r\nexport type AppType = ReturnType<typeof setInitialApp> | ReturnType<typeof setDisabledBtn>\r\n\r\n\r\nexport const AppReducer = (state: stateProps = initialState, action: AppType): stateProps => {\r\n    switch (action.type) {\r\n        case ActionType.SET_INITIAL_APP:\r\n            return {...state, ...action.payload}\r\n        case ActionType.SET_DISABLED_BTN:\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInitialApp = (isInitial:boolean) => ({type:ActionType.SET_INITIAL_APP, payload:{isInitial}})\r\nexport const setDisabledBtn= (disabledBtn:boolean) => {\r\n    return{type:ActionType.SET_DISABLED_BTN, payload:{disabledBtn}}\r\n}\r\n","import {RequestStatusType, StatusFetchEnum} from \"../TableReducer/TableType\";\r\nimport {AppThunk} from \"../store\";\r\nimport {ApiAuth} from \"../../Api/Api\";\r\nimport {cleanProfile, setProfileAc} from \"./ProfileReducer\";\r\nimport {setDisabledBtn, setInitialApp} from \"../appReducer/AppReducer\";\r\nimport {HelperErrorCatch} from \"../../helper/error-handler\";\r\n\r\nexport interface stateProps {\r\n    isLogin: boolean\r\n    status: RequestStatusType\r\n    errorMes: string | null\r\n}\r\nconst initialState: stateProps = {\r\n    isLogin: false,\r\n    status: \"succeeded\",\r\n    errorMes: null\r\n}\r\nexport enum ActionType {\r\n    SET_LOGIN = 'AUTH/SET_LOGIN',\r\n    SET_STATUS = 'AUTH/SET_STATUS',\r\n    SET_ERROR_MES = 'AUTH/SET_ERROR_MES'\r\n}\r\n\r\nconst AuthReducer = (state: stateProps = initialState, action: AuthType): stateProps => {\r\n    switch (action.type) {\r\n        case ActionType.SET_LOGIN:\r\n            return {...state, ...action.payload}\r\n        case ActionType.SET_STATUS: {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case ActionType.SET_ERROR_MES:\r\n            return {...state, ...action.payload}\r\n    }\r\n    return state\r\n}\r\nexport const setLoginAC = (isLogin: boolean) => ({type: ActionType.SET_LOGIN, payload: {isLogin}})\r\nexport const setStatusAC = (status: RequestStatusType) => ({type: ActionType.SET_STATUS, payload: {status}})\r\n\r\nexport const setErrorMes = (errorMes: string) => ({type: ActionType.SET_ERROR_MES, payload: {errorMes}})\r\n\r\nexport type AuthType = ReturnType<typeof setLoginAC> | ReturnType<typeof setStatusAC> | ReturnType<typeof setErrorMes>\r\n\r\n\r\n\r\n\r\n//Thunk\r\n\r\nexport const setLoginT = (email: string, password: string, rememberMe: boolean): AppThunk => async(dispatch) => {\r\n    dispatch(setStatusAC(StatusFetchEnum.LOADING))\r\n    dispatch(setDisabledBtn(true))\r\n    try {\r\n      const res =  await ApiAuth.login(email, password, rememberMe)\r\n        dispatch(setProfileAc(res.data))\r\n        dispatch(setLoginAC(true))\r\n        dispatch(setErrorMes(''))\r\n        dispatch(setStatusAC(StatusFetchEnum.OK))\r\n    }catch (e) {\r\n        HelperErrorCatch(e, dispatch)\r\n        dispatch(setLoginAC(false))\r\n    }finally {\r\n        dispatch(setDisabledBtn(false))\r\n    }\r\n}\r\nexport const setAuthMe = (): AppThunk => async (dispatch) => {\r\n    dispatch(setDisabledBtn(true))\r\n    dispatch(setStatusAC(StatusFetchEnum.LOADING))\r\n    try {\r\n        const res = await  ApiAuth.authMe()\r\n        dispatch(setErrorMes(''))\r\n        dispatch(setProfileAc(res.data))\r\n        dispatch(setLoginAC(true))\r\n        dispatch(setStatusAC(StatusFetchEnum.OK))\r\n    }catch (e) {\r\n        HelperErrorCatch(e, dispatch)\r\n        dispatch(setLoginAC(false))\r\n    }finally {\r\n        dispatch(setInitialApp(true))\r\n        dispatch(setDisabledBtn(false))\r\n    }\r\n}\r\nexport const setRegistration = (email: string, password: string): AppThunk  => async (dispatch) => {\r\n    dispatch(setStatusAC(StatusFetchEnum.LOADING))\r\n    dispatch(setDisabledBtn(true))\r\n    try{\r\n        await  ApiAuth.registration(email, password)\r\n        dispatch(setErrorMes(''))\r\n        dispatch(setStatusAC(StatusFetchEnum.OK))\r\n    }catch (e) {\r\n        HelperErrorCatch(e, dispatch)\r\n    } finally {\r\n        dispatch(setDisabledBtn(false))\r\n    }\r\n}\r\nexport const setLogOut = (): AppThunk =>async (dispatch) => {\r\n    dispatch(setStatusAC(StatusFetchEnum.LOADING))\r\n    dispatch(setDisabledBtn(true))\r\n    try{\r\n        await ApiAuth.logOut()\r\n        dispatch(setErrorMes(''))\r\n        dispatch(setLoginAC(false))\r\n        dispatch(setStatusAC(StatusFetchEnum.OK))\r\n        dispatch(cleanProfile())\r\n    }catch (e) {\r\n        HelperErrorCatch(e, dispatch)\r\n    }finally {\r\n        dispatch(setDisabledBtn(false))\r\n    }\r\n\r\n}\r\nexport default AuthReducer","import {AxiosError} from \"axios\";\r\nimport {Dispatch} from \"react\";\r\nimport {setErrorMes, setStatusAC} from \"../store/AuthReducer/AuthReducer\";\r\nimport {StatusFetchEnum} from \"../store/TableReducer/TableType\";\r\n\r\nexport const HelperErrorCatch = (e:AxiosError, dispatch: Dispatch<ErrorDispatchType>) => {\r\n    const error =  e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n    console.log(error)\r\n    dispatch(setErrorMes(error))\r\n    dispatch(setStatusAC(StatusFetchEnum.FAIL))\r\n    console.log('errors:', {...e})\r\n}\r\n\r\ntype ErrorDispatchType = ReturnType<typeof setErrorMes> | ReturnType<typeof setStatusAC>\r\n","import {GridCellParams} from \"@material-ui/x-grid\";\r\nimport {createStyles, makeStyles, Paper, Popper, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {isOverflown} from \"@material-ui/data-grid\";\r\nimport {Order, OrderEnum, SortEnum, TableRowType} from \"../store/TableReducer/TableType\";\r\n\r\ninterface GridCellExpandProps {\r\n    value: string;\r\n    width: number;\r\n}\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            alignItems: 'center',\r\n            lineHeight: '24px',\r\n            width: '100%',\r\n            height: '100%',\r\n            position: 'relative',\r\n            display: 'flex',\r\n            '& .cellValue': {\r\n                whiteSpace: 'nowrap',\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\nconst GridCellExpand = React.memo(function GridCellExpand(\r\n    props: GridCellExpandProps,\r\n) {\r\n    const { width, value } = props;\r\n    const wrapper = React.useRef<HTMLDivElement | null>(null);\r\n    const cellDiv = React.useRef(null);\r\n    const cellValue = React.useRef(null);\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const classes = useStyles();\r\n    const [showFullCell, setShowFullCell] = React.useState(false);\r\n    const [showPopper, setShowPopper] = React.useState(false);\r\n\r\n    const handleMouseEnter = () => {\r\n        const isCurrentlyOverflown = isOverflown(cellValue.current!);\r\n        setShowPopper(isCurrentlyOverflown);\r\n        setAnchorEl(cellDiv.current);\r\n        setShowFullCell(true);\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n        setShowFullCell(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (!showFullCell) {\r\n            return undefined;\r\n        }\r\n\r\n        function handleKeyDown(nativeEvent: KeyboardEvent) {\r\n            // IE11, Edge (prior to using Bink?) use 'Esc'\r\n            if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\r\n                setShowFullCell(false);\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, [setShowFullCell, showFullCell]);\r\n\r\n    return (\r\n        <div\r\n            ref={wrapper}\r\n            className={classes.root}\r\n            onMouseEnter={handleMouseEnter}\r\n            onMouseLeave={handleMouseLeave}\r\n        >\r\n            <div\r\n                ref={cellDiv}\r\n                style={{\r\n                    height: 1,\r\n                    width,\r\n                    display: 'block',\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                }}\r\n            />\r\n            <div ref={cellValue} className=\"cellValue\">\r\n                {value}\r\n            </div>\r\n            {showPopper && (\r\n                <Popper\r\n                    open={showFullCell && anchorEl !== null}\r\n                    anchorEl={anchorEl}\r\n                    style={{ width, marginLeft: -17 }}\r\n                >\r\n                    <Paper\r\n                        elevation={1}\r\n                        style={{ minHeight: wrapper.current!.offsetHeight - 3 }}\r\n                    >\r\n                        <Typography variant=\"body2\" style={{ padding: 8 }}>\r\n                            {value}\r\n                        </Typography>\r\n                    </Paper>\r\n                </Popper>\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\n export function renderCellExpand(params: GridCellParams) {\r\n    return (\r\n        <GridCellExpand\r\n            value={params.value ? params.value.toString() : ''}\r\n            width={params.colDef.width}\r\n        />\r\n    );\r\n}\r\n\r\nexport const currentyTime = Intl.DateTimeFormat('ru-Ru', {\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n\r\n})\r\nexport const currentDate = Intl.DateTimeFormat('ru-Ru', {\r\n    year: 'numeric',\r\n    day: '2-digit',\r\n    month: '2-digit',\r\n\r\n})\r\n\r\nexport const setTime = (data:string, time: string, row?: any) => {\r\n    const date = new Date(row? row.date : null)\r\n    const arrDate = data?.split('-').map(el => (+el))\r\n    const arrayTime = time?.split(':').map(el => +el)\r\n    date.setFullYear(arrDate[0], arrDate[1] - 1, arrDate[2])\r\n    date.setHours(arrayTime[0], arrayTime[1])\r\n    return date.toISOString()\r\n\r\n}\r\nexport const setYear = (data:string) => {\r\n\r\n     if(data.trim() === '') return null\r\n    const arrDate = data?.split('-').map(el => (+el))\r\n    return new Date(arrDate[0], arrDate[1] - 1, arrDate[2] +1).toISOString()\r\n}\r\nexport const smartSorting = (rows: TableRowType[], typeSorting: string, sortByValue: Order, keyValue: string) => {\r\n\r\n    if (typeSorting === SortEnum.NUMBER) {\r\n        sortByValue === OrderEnum.ASC\r\n            ? rows.sort(function (a, b) {\r\n                return b[keyValue] - a[keyValue]\r\n            })\r\n            : rows.sort(function (a, b) {\r\n                return a[keyValue] - b[keyValue]\r\n            })\r\n    }\r\n    if (typeSorting === SortEnum.STRING) {\r\n        sortByValue === OrderEnum.ASC\r\n            ? rows.sort(function (a, b) {\r\n\r\n                if (a[keyValue].toLowerCase() < b[keyValue].toLowerCase()) //сортируем строки по возрастанию\r\n                    return -1\r\n                if (a[keyValue].toLowerCase() > b[keyValue].toLowerCase())\r\n                    return 1\r\n                return 0\r\n            })\r\n            : rows.sort(function (a, b) {\r\n                if (a[keyValue].toLowerCase() > b[keyValue].toLowerCase()) //сортируем строки по возрастанию\r\n                    return -1\r\n                if (a[keyValue].toLowerCase() < b[keyValue].toLowerCase())\r\n                    return 1\r\n                return 0\r\n            })\r\n    }\r\n    if (typeSorting === SortEnum.DATE) {\r\n\r\n        sortByValue === OrderEnum.ASC\r\n            ? rows.sort(function (a, b) {\r\n                const dateA = new Date(a[keyValue]).getTime(),\r\n                    dateB = new Date(b[keyValue]).getTime()\r\n\r\n                return dateB - dateA\r\n            })\r\n            : rows.sort((a, b) => {\r\n                const dateA = new Date(a[keyValue]).getTime(),\r\n                    dateB = new Date(b[keyValue]).getTime()\r\n                return dateA - dateB\r\n\r\n            })\r\n    }\r\n    if (typeSorting === SortEnum.BOOLEAN) {\r\n        sortByValue === OrderEnum.ASC\r\n            ? rows.sort(function (a, b) {\r\n                return (a[keyValue] === b[keyValue]) ? 0 : a[keyValue] ? -1 : 1;\r\n            })\r\n            : rows.sort(function (a, b) {\r\n                return (a[keyValue] === b[keyValue]) ? 0 : a[keyValue] ? 1 : -1;\r\n            })\r\n    }\r\n    return rows\r\n}\r\n\r\nexport const changeFinDate = (date:string) => {\r\n    const newDate = new Date(Date.parse(date)).setHours(23, 59, 59)\r\n\r\n    return  new Date(newDate).toISOString()\r\n}\r\nexport const changeStartDate = (date:string) => {\r\n    const newDate = new Date(Date.parse(date)).setHours(0, 0, 0)\r\n    return  new Date(newDate).toISOString()\r\n}","import {RequestStatusType, StatusFetchEnum, TableRowType} from './TableType'\r\nimport {rows} from \"../../data\";\r\nimport {AppThunk} from \"../store\";\r\nimport {ApiCandidatePack, candidatePacKAdd, candidatePackUpdate} from \"../../Api/Api\";\r\nimport {setDisabledBtn} from \"../appReducer/AppReducer\";\r\nimport {HelperErrorCatch} from \"../../helper/error-handler\";\r\n\r\nconst initialState: TableTypeInit = {\r\n    rows: rows,\r\n    edditRows: [],\r\n    searchTotal: '',\r\n    searchStatus: '',\r\n    searchPosition: '',\r\n    status: StatusFetchEnum.OK,\r\n    totalPacks: null\r\n}\r\ntype TableTypeInit = {\r\n    rows: TableRowType[] | []\r\n    edditRows: TableRowType[] | []\r\n    searchTotal: string\r\n    searchStatus: string\r\n    searchPosition: string\r\n    status: RequestStatusType\r\n    totalPacks: number | null\r\n}\r\n\r\n//Type\r\nexport enum ActionType {\r\n    EDIT_TABLE_ROW = 'EDIT_TABLE_ROW',\r\n    EDIT_TABLE_ROW_SUCSESS = 'EDIT_TABLE_ROW_SUCSESS',\r\n    CLEAR_EDIT_TABLE = 'CLEAR_EDIT_TABLE',\r\n    ADD_NEW_TABLE = 'ADD_NEW_TABLE',\r\n    EDIT_VALUE_ROW = 'EDIT_VALUE_ROW',\r\n    ADD_SEARCH_STATUS = 'ADD_SEARCH_STATUS',\r\n    ADD_SEARCH_TOTAL = 'ADD_SEARCH_TOTAL',\r\n    ADD_SEARCH_POSITION = 'ADD_SEARCH_POSITION',\r\n    FETCH_CANDIDATES_PACK = 'FETCH_CANDIDATES_PACK',\r\n    SET_FETCH_STATUS = 'SET_FETCH_STATUS',\r\n    SET_TOTAL_COUNT = 'SET_TOTAL_COUNT',\r\n}\r\n\r\n//actions\r\nexport type tableActionsType = ReturnType<typeof editTable> | ReturnType<typeof editTableSuccess>\r\n    | ReturnType<typeof clearEditTable>\r\n    | ReturnType<typeof AddNewTable>\r\n    | ReturnType<typeof editRecommendationValue>\r\n    | ReturnType<typeof addSearchStatus>\r\n    | ReturnType<typeof addSearchTotal>\r\n    | ReturnType<typeof fetchCandidatesPack>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof setTotalCount>\r\n    | ReturnType<typeof addSearchPosition>\r\n\r\n\r\nexport const TableReducer = (state: TableTypeInit = initialState, action: tableActionsType): TableTypeInit => {\r\n    switch (action.type) {\r\n\r\n        case ActionType.EDIT_TABLE_ROW:\r\n            const fileredArray = state.rows.filter(a => action.ArrayId.includes(a._id))\r\n           return {...state, edditRows: fileredArray}\r\n\r\n        case ActionType.EDIT_TABLE_ROW_SUCSESS:\r\n            const newArray = state.rows.map((row: TableRowType) => row._id ===action.row._id ?  action.row : row)\r\n            return {...state, rows:[...newArray]}\r\n        case ActionType.CLEAR_EDIT_TABLE:\r\n            return {...state, edditRows: state.edditRows?.filter(tl => tl._id !== action.rowId)}\r\n        case ActionType.ADD_NEW_TABLE:\r\n            return {...state, rows:[...state.rows, action.row]}\r\n        case ActionType.EDIT_VALUE_ROW:\r\n\r\n            const newArr = state.rows.map((el:TableRowType) => el._id === action.id ? {...el, recommendation: action.value} : el)\r\n            return {...state, rows:[...newArr]}\r\n        case ActionType.ADD_SEARCH_STATUS:\r\n            return {...state, searchStatus: action.value}\r\n        case ActionType.ADD_SEARCH_TOTAL:\r\n            return {...state, searchTotal: action.value}\r\n        case ActionType.FETCH_CANDIDATES_PACK:\r\n            return {...state, rows:[...action.candidatesPack]}\r\n        case ActionType.SET_FETCH_STATUS:\r\n            return {...state, status: action.status}\r\n        case ActionType.SET_TOTAL_COUNT:\r\n            return {...state, totalPacks: action.totalCount}\r\n        case ActionType.ADD_SEARCH_POSITION:\r\n            return {...state, searchPosition: action.value}\r\n        default:\r\n            return state\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const editTable = (ArrayId:string[]) => ({type:ActionType.EDIT_TABLE_ROW, ArrayId} as const)\r\nexport const editTableSuccess = (row:TableRowType) => ({type:ActionType.EDIT_TABLE_ROW_SUCSESS, row} as const)\r\nexport const AddNewTable = (row:TableRowType) => ({type:ActionType.ADD_NEW_TABLE, row} as const)\r\n\r\nexport const clearEditTable = (rowId: string) => ({type: ActionType.CLEAR_EDIT_TABLE,rowId} as const)\r\nexport const editRecommendationValue = (value: string, id:string) => {\r\n\r\n    return {type: ActionType.EDIT_VALUE_ROW,value, id} as const\r\n}\r\nexport const addSearchStatus = (value: string) => ({type: ActionType.ADD_SEARCH_STATUS,value} as const)\r\nexport const addSearchTotal = (value: string) => ({type: ActionType.ADD_SEARCH_TOTAL,value} as const)\r\nexport const addSearchPosition = (value: string) => ({type: ActionType.ADD_SEARCH_POSITION,value} as const)\r\nconst fetchCandidatesPack = (candidatesPack:TableRowType[]) => ({type:ActionType.FETCH_CANDIDATES_PACK, candidatesPack} as const)\r\nconst setStatus = (status:RequestStatusType) => ({type:ActionType.SET_FETCH_STATUS, status} as const)\r\nconst setTotalCount= (totalCount:number) => ({type:ActionType.SET_TOTAL_COUNT, totalCount} as const)\r\n\r\n\r\nexport const getPacksThunk = (user_id: string, ): AppThunk  => async (dispatch,getState) => {\r\n    dispatch(setStatus(StatusFetchEnum.LOADING))\r\n    dispatch(setDisabledBtn(true))\r\n    const packName = ''\r\n    const searchStatus = getState().tableRows.searchStatus\r\n    const searchTotal = getState().tableRows.searchTotal\r\n    const searchPosition = getState().tableRows.searchPosition\r\n    try {\r\n\r\n        const res =await ApiCandidatePack.getCandidatesPack(user_id, packName, searchStatus, searchTotal, searchPosition)\r\n        console.log(res)\r\n        dispatch(fetchCandidatesPack(res.data.candidatesPacks))\r\n        dispatch(setTotalCount(res.data.totalPacks))\r\n        dispatch(setStatus(StatusFetchEnum.OK))\r\n    }catch (e) {\r\n        HelperErrorCatch(e, dispatch)\r\n    }finally {\r\n        dispatch(setDisabledBtn(false))\r\n    }\r\n}\r\n\r\nexport const updatePack = (candidatePack:candidatePackUpdate): AppThunk =>  async (dispatch, getState) => {\r\n    dispatch(setStatus(StatusFetchEnum.LOADING))\r\n    dispatch(setDisabledBtn(true))\r\n    const userId = getState().profile.profile?._id\r\n    try {\r\n        if( userId) {\r\n            await  ApiCandidatePack.updateCandidatesPack(candidatePack)\r\n            dispatch(getPacksThunk(userId))\r\n        }\r\n        dispatch(setStatus(StatusFetchEnum.OK))\r\n    }catch (e) {\r\n        HelperErrorCatch(e, dispatch)\r\n    }finally {\r\n        dispatch(setDisabledBtn(false))\r\n    }\r\n}\r\n\r\nexport const addNewCandidate = (candidatePack:candidatePacKAdd): AppThunk =>  async (dispatch, getState) => {\r\n    dispatch(setStatus(StatusFetchEnum.LOADING))\r\n    dispatch(setDisabledBtn(true))\r\n    const userId = getState().profile.profile?._id\r\n    try {\r\n        if( userId) {\r\n            await ApiCandidatePack.addNewCandidate(candidatePack)\r\n            dispatch(getPacksThunk(userId))\r\n        }\r\n        dispatch(setStatus(StatusFetchEnum.OK))\r\n    }catch (e) {\r\n        HelperErrorCatch(e, dispatch)\r\n    }finally {\r\n        dispatch(setDisabledBtn(false))\r\n    }\r\n}\r\n\r\n\r\n","import {HeadCellsType, SortEnum, TableRowType} from \"./store/TableReducer/TableType\";\r\n\r\nexport const rows: Array<TableRowType> = [];\r\nexport const headCells: HeadCellsType[] = [\r\n    {id: 'date', numeric: true, label: 'Дата', sorting: true, typeSorting: SortEnum.DATE,},\r\n    {id: 'time', numeric: true, label: 'Время', sorting: false, typeSorting: SortEnum.DATE,},\r\n    {id: 'position', numeric: false, label: 'Должность', sorting: false, typeSorting: SortEnum.STRING,},\r\n    {id: 'name', numeric: false, label: 'ФИО', sorting: false, typeSorting: SortEnum.STRING,},\r\n    {id: 'phone', numeric: false, label: 'Телефон', sorting: false, typeSorting: SortEnum.STRING,},\r\n    {id: 'meeting', numeric: false, label: 'Встреча', sorting: false, typeSorting: SortEnum.BOOLEAN,},\r\n    {id: 'status', numeric: false, label: 'Итог', sorting: false, typeSorting: SortEnum.STRING,},\r\n    {id: 'recommendation', numeric: false, label: 'Рекомендации', sorting: false, typeSorting: SortEnum.STRING,},\r\n    {id: 'leaderInterview', numeric: false, label: 'РукИнт', sorting: true, typeSorting: SortEnum.BOOLEAN,},\r\n    {id: 'total', numeric: false, label: 'Итог2.0', sorting: false, typeSorting: SortEnum.STRING,},\r\n    {id: 'SS', numeric: false, label: 'Связь', sorting: true, typeSorting: SortEnum.DATE,},\r\n];","import React, {FC} from 'react';\r\nimport {useFormik} from \"formik\";\r\nimport {PositionEnum, StatusEnum, StatusFetchEnum, TableRowType, TotalEnum} from \"../../store/TableReducer/TableType\";\r\nimport {currentDate, setYear} from \"../../helper/helper\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {clearEditTable, updatePack} from \"../../store/TableReducer/TableReducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    CircularProgress,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport style from \"./FormikEditOne.module.scss\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputMask from \"react-input-mask\";\r\n\r\ninterface FormikEditOnePropsType {\r\n    row: TableRowType\r\n}\r\n\r\nconst FormikEditOne: FC<FormikEditOnePropsType> = ({row}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const optionsArrayStatus = [StatusEnum.OK, StatusEnum.NO, StatusEnum.THINK]\r\n    const optionsArrayTotal = [TotalEnum.OFER, TotalEnum.CANSEL, TotalEnum.CANSEL_LID, TotalEnum.TRANING]\r\n    const optionsArrayPosition = [PositionEnum.KARATIST, PositionEnum.SLESAR, PositionEnum.PRESIDENT, PositionEnum.TRACTORIS]\r\n    const {status} = useSelector((state: AppRootStateType) => state.tableRows)\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            date: row ? currentDate.format(new Date(row.date)).split('.').reverse().join('-') : \"\",\r\n            time: row.time,\r\n            name: row?.name,\r\n            meeting: row.meeting ? row.meeting : false,\r\n            position: row.position,\r\n            status: row.status,\r\n            recommendation: row.recommendation,\r\n            leaderInterview: row.leaderInterview ? row.leaderInterview : false,\r\n            phone: row.phone,\r\n            total: row.total,\r\n            SS: row && row.SS ? currentDate.format(new Date(row.SS)).split('.').reverse().join('-') : '',\r\n        },\r\n        onSubmit: (values) => {\r\n            const time = values.time\r\n            const date = values.date\r\n            if (time && date) {\r\n\r\n\r\n                const currentSS = setYear(values.SS)\r\n                const newObject = {\r\n                    date: new Date(Date.parse(date)).toISOString(),\r\n                    time: time,\r\n                    name: values.name,\r\n                    _id: row?._id,\r\n                    meeting: values.meeting,\r\n                    phone: values.phone,\r\n                    total: values.total,\r\n                    status: values.status,\r\n                    position: values.position,\r\n                    recommendation: values.recommendation,\r\n                    leaderInterview: values.leaderInterview,\r\n                    SS: currentSS === null ? null : currentSS\r\n                }\r\n                dispatch(updatePack(newObject))\r\n                dispatch(clearEditTable(newObject._id))\r\n\r\n            }\r\n\r\n            formik.resetForm();\r\n        },\r\n        // validate: (values) => {\r\n        //     const errors: ErrorType = {};\r\n        //\r\n        //     if (!values.email) {\r\n        //         errors.email = 'Required';\r\n        //     } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        //         errors.email = 'Invalid email address';\r\n        //     }\r\n        //\r\n        //     return errors;\r\n        // }\r\n    });\r\n    if (status === StatusFetchEnum.LOADING) return <CircularProgress/>\r\n    else return (\r\n       <div className={style.container}>\r\n           <form onSubmit={formik.handleSubmit} >\r\n               <FormControl>\r\n                   <FormGroup>\r\n\r\n                       <TextField\r\n                           id=\"date\"\r\n                           label=\"Дата\"\r\n                           type=\"date\"\r\n\r\n                           InputLabelProps={{\r\n                               shrink: true,\r\n                           }}\r\n                           {...formik.getFieldProps('date')}\r\n                       />\r\n\r\n                       <TextField\r\n                           id=\"time\"\r\n                           label=\"Время\"\r\n                           type=\"time\"\r\n\r\n                           InputLabelProps={{\r\n                               shrink: true,\r\n                           }}\r\n                           inputProps={{\r\n                               step: 300, // 5 min\r\n                           }}\r\n                           {...formik.getFieldProps('time')}\r\n                       />\r\n\r\n                       <TextField\r\n                           select\r\n                           label=\"Должность\"\r\n                           variant=\"standard\"\r\n                           margin=\"normal\"\r\n                           InputLabelProps={{\r\n                               shrink: true,\r\n                           }}\r\n                           {...formik.getFieldProps('position')}\r\n                       >\r\n                           {optionsArrayPosition.map((option) => (\r\n                               <MenuItem key={option} value={option}>\r\n                                   {option}\r\n                               </MenuItem>\r\n                           ))}\r\n                       </TextField>\r\n\r\n                       <TextField required label=\"ФИО\" {...formik.getFieldProps('name')}/>\r\n                       <InputMask\r\n                           mask=\"+7(999) 999-99-99\"\r\n                           disabled={false}\r\n                           {...formik.getFieldProps('phone')}\r\n                       >\r\n                           {(a: any) => {\r\n                               return <TextField label=\"Phone\" {...a} />\r\n                           }}\r\n                       </InputMask>\r\n                       <FormControlLabel\r\n                           control={<Checkbox\r\n                               checked={formik.values.meeting} {...formik.getFieldProps('meeting')} />}\r\n                           label=\"Встреча\"\r\n                       />\r\n\r\n\r\n                       <TextField\r\n                           select\r\n                           label=\"Итог\"\r\n                           variant=\"standard\"\r\n                           margin=\"normal\"\r\n                           InputLabelProps={{\r\n                               shrink: true,\r\n                           }}\r\n                           {...formik.getFieldProps('status')}\r\n                       >\r\n                           {optionsArrayStatus.map((option) => (\r\n                               <MenuItem key={option} value={option}>\r\n                                   {option}\r\n                               </MenuItem>\r\n                           ))}\r\n                       </TextField>\r\n\r\n                       <TextField label='Рекомендации' {...formik.getFieldProps('recommendation')}/>\r\n\r\n                       <FormControlLabel\r\n                           control={<Checkbox\r\n                               checked={formik.values.leaderInterview} {...formik.getFieldProps('leaderInterview')} />}\r\n                           label=\"Интервью с руководителем\"\r\n                       />\r\n\r\n\r\n                       <TextField\r\n                           select\r\n                           label=\"Итог 2.0\"\r\n                           variant=\"standard\"\r\n                           margin=\"normal\"\r\n                           InputLabelProps={{\r\n                               shrink: true,\r\n                           }}\r\n                           {...formik.getFieldProps('total')}\r\n                       >\r\n                           {optionsArrayTotal.map((option) => (\r\n                               <MenuItem key={option} value={option}>\r\n                                   {option}\r\n                               </MenuItem>\r\n                           ))}\r\n                       </TextField>\r\n                       <TextField\r\n                           label=\"SS\"\r\n                           type=\"date\"\r\n\r\n                           InputLabelProps={{\r\n                               shrink: true,\r\n                           }}\r\n                           {...formik.getFieldProps('SS')}\r\n                       />\r\n\r\n                   </FormGroup>\r\n\r\n                   <Button type={'submit'} variant={'contained'} color={'primary'}>Изменить</Button>\r\n\r\n               </FormControl>\r\n           </form>\r\n       </div>\r\n    );\r\n};\r\n\r\nexport default FormikEditOne;","import React, {useEffect} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport FormikEditOne from \"./formikEditOne\";\r\nimport {TableRowType} from \"../../store/TableReducer/TableType\";\r\n\r\n\r\nconst EditPage = () => {\r\n    const rows = useSelector((state: AppRootStateType) => state.tableRows.edditRows)\r\n    console.log(rows)\r\n    useEffect(() => {\r\n        //fetchRows\r\n    }, [rows])\r\n    return (\r\n        <div>\r\n            {rows.length > 0? rows.map((row:TableRowType) => {\r\n                return (\r\n                    <FormikEditOne row={row} key={row._id}/>\r\n\r\n                )\r\n            }) :  <h1>EMPTY</h1>}\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n\r\n};\r\n\r\nexport default EditPage;","import {AppRootStateType} from \"../store/store\";\r\n\r\nexport const selectDisableBtn = (state:AppRootStateType) => state.app.disabledBtn\r\nexport const getRowArray = (state:AppRootStateType) => state.tableRows.rows;\r\nexport const getStatistic = (state:AppRootStateType) => state.statistic.statisticArray;","import React, {FC} from 'react';\r\nimport cls from './WrappedSearch.module.css'\r\n\r\ninterface PropsType {\r\n    setPropsOpen?: (value:boolean)=> void\r\n    closeProps?: boolean\r\n}\r\nconst WrappedSearch:FC<PropsType> = ({closeProps,  children}) => {\r\n\r\n    // const onToggleHandler = () => {\r\n    //     if (setPropsOpen) setPropsOpen(!closeProps)\r\n    // }\r\n    return (\r\n        <>\r\n            <div className={closeProps ? cls.close : cls.open}>{children}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WrappedSearch;","import React, {ChangeEvent, FC, useState} from 'react';\r\nimport cls from './SearchForm.module.css'\r\nimport {IconButton, TextField} from \"@material-ui/core\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\ninterface PropsType {\r\n    disabledBtn:boolean\r\n    setCurrentSearchName: (value:string) => void\r\n    closeProps:boolean\r\n}\r\n\r\nconst SearchForm: FC<PropsType> = ({disabledBtn, setCurrentSearchName, closeProps}) => {\r\n    const [value, setValue] = useState<string>('');\r\n    const [timerId, setTimerId] = useState<number>(0);\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setValue(e.currentTarget.value)\r\n        start()\r\n    }\r\n    const onClickHandler = () => {\r\n        setCurrentSearchName(value)\r\n    }\r\n    const stop = () => {\r\n        clearTimeout(timerId);\r\n    }\r\n    if (closeProps) {\r\n        clearTimeout(timerId);\r\n    }\r\n    const start = () => {\r\n        stop();\r\n        const id: number = window.setTimeout(() => {\r\n            setCurrentSearchName(value)\r\n        }, 2000);\r\n        setTimerId(id);\r\n    }\r\n\r\n    return (\r\n        <div className={cls.mainWrap}>\r\n            <TextField\r\n                className={cls.textField}\r\n                value={value}\r\n                onChange={(e) => onChangeHandler(e)}\r\n                label=\"Поиск по ФИО\"\r\n            />\r\n            <span>\r\n                <IconButton aria-label=\"filter list\" disabled={disabledBtn} onClick={onClickHandler}>\r\n                   <SearchIcon/>\r\n                </IconButton>\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchForm;","import {createStyles, IconButton, lighten, makeStyles, Theme, Toolbar, Tooltip, Typography} from '@material-ui/core';\r\nimport React, {FC, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport {RoutingType} from \"../../routes/Routes\";\r\nimport {editTable} from \"../../store/TableReducer/TableReducer\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport style from './EnhancedTableToolbar.module.css'\r\nimport {selectDisableBtn} from \"../../utils/selectors\";\r\nimport WrappedSearch from \"../../components/wrapped/WrappedSearch\";\r\nimport SearchForm from \"../../components/Form/SearchForm\";\r\n\r\n\r\nexport const useToolbarStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(1),\r\n        },\r\n        highlight:\r\n            theme.palette.type === 'light'\r\n                ? {\r\n                    color: theme.palette.secondary.main,\r\n                    backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n                }\r\n                : {\r\n                    color: theme.palette.text.primary,\r\n                    backgroundColor: theme.palette.secondary.dark,\r\n                },\r\n        title: {\r\n            flex: '1 1 100%',\r\n        },\r\n    }),\r\n);\r\n\r\ninterface EnhancedTableToolbarProps {\r\n    numSelected: number;\r\n    setSelected: Function\r\n    selected: string[]\r\n    setCurrentSearchName: (value:string) => void\r\n}\r\n\r\nconst EnhancedTableToolbar: FC<EnhancedTableToolbarProps> = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const {numSelected} = props;\r\n    const disabledBtn = useSelector(selectDisableBtn)\r\n    const dispatch = useDispatch()\r\n    const [open, setOpen] = useState(true)\r\n    const editHandler = () => {\r\n        console.log(props.selected)\r\n        dispatch(editTable(props.selected))\r\n    }\r\n\r\n    const onToggleHandler = () => {\r\n        setOpen(!open)\r\n    }\r\n    return (\r\n        <>\r\n            <Toolbar\r\n                className={clsx(classes.root, {\r\n                    [classes.highlight]: numSelected > 0,\r\n                })}\r\n            >\r\n                {numSelected > 0 ? (\r\n                    <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                        {numSelected} selected\r\n                    </Typography>\r\n                ) : (\r\n                    <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                        Таблица Машки\r\n                    </Typography>\r\n                )}\r\n                <Tooltip title=\"add\">\r\n                    <span>\r\n                        <IconButton aria-label=\"filter list\" disabled={disabledBtn}>\r\n                                 <NavLink to={RoutingType.ADD} className={style.linkAdd}>\r\n                                     <AddIcon/>\r\n                                </NavLink> \r\n                            </IconButton>\r\n                    </span>\r\n\r\n                </Tooltip>\r\n                {numSelected > 0 ? (\r\n                    <Tooltip title=\"edit\">\r\n                        <span>\r\n                            <NavLink to={RoutingType.EDIT} onClick={editHandler}>\r\n                            <EditIcon/>\r\n                        </NavLink>\r\n                        </span>\r\n                    </Tooltip>\r\n                ) : (\r\n                    <>\r\n                    <Tooltip title=\"Filter list\">\r\n                        <span>\r\n                            <IconButton aria-label=\"filter list\" disabled={disabledBtn} onClick={onToggleHandler}>\r\n                            <FilterListIcon/>\r\n                        </IconButton>\r\n                        </span>\r\n                    </Tooltip>\r\n\r\n                    </>\r\n                )}\r\n\r\n            </Toolbar>\r\n            <WrappedSearch closeProps={open}>\r\n                <SearchForm disabledBtn={disabledBtn} setCurrentSearchName={props.setCurrentSearchName} closeProps={open}/>\r\n            </WrappedSearch>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EnhancedTableToolbar;","import React, {ChangeEvent, useState} from \"react\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport style from './EditableSpanText.module.scss'\r\nimport {SortEnum, TypeSort} from \"../../store/TableReducer/TableType\";\r\n\r\ntype EditableSpanType = {\r\n    value:string\r\n    onChanges: (newValue:string, id:string) => void\r\n    blured: boolean\r\n    typeSpan: TypeSort\r\n    idRow:string\r\n}\r\n\r\nconst EditableSpanText = React.memo((props:EditableSpanType) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const [title, setTitle] = useState<string>(props.value)\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        console.log(e.currentTarget.value)\r\n        setTitle(e.currentTarget.value);\r\n    }\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        setTitle(props.value)\r\n    }\r\n    const activateViewMetod = () => {\r\n        setEditMode(false);\r\n        props.onChanges(title, props.idRow);\r\n    }\r\n\r\n    return (\r\n        editMode\r\n            ? props.typeSpan === SortEnum.STRING\r\n            ?<TextField value={title} onChange={changeTitle} autoFocus onBlur={activateViewMetod}/>\r\n            : props.typeSpan === SortEnum.DATE\r\n                ?   <TextField\r\n                    id=\"date\"\r\n                    label=\"Обратная Связь\"\r\n                    type=\"date\"\r\n                    defaultValue={props.value.split('.').join('-')}\r\n                    onChange={changeTitle} autoFocus onBlur={activateViewMetod}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n                : <TextField value={title} onChange={changeTitle} autoFocus onBlur={activateViewMetod}/>\r\n            : props.blured\r\n            ? <div onDoubleClick={activateEditMode} className={style.editSpan}>{props.value}</div>\r\n            : null\r\n    )\r\n})\r\n\r\nexport default EditableSpanText;","import React, {FC} from 'react';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport style from './SelectedHeader.module.scss'\r\nimport {PositionType, StatusEnum, StatusType, TotalEnum, TotalType} from \"../../store/TableReducer/TableType\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addSearchPosition, addSearchStatus, addSearchTotal} from \"../../store/TableReducer/TableReducer\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            display: 'block',\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 120,\r\n        },\r\n    }),\r\n);\r\n\r\ninterface SelectedHeaderProps {\r\n    filtered: boolean,\r\n    optionsArray: StatusEnum[] | TotalEnum[] | PositionType[];\r\n    id:string\r\n    setCloseFilteredIcon: (el: boolean) => void\r\n}\r\n\r\nconst  SelectedHeader:FC<SelectedHeaderProps> = ({filtered, optionsArray, id, setCloseFilteredIcon}) =>{\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [value, setValue] = React.useState<string >('');\r\n\r\n    const dispath= useDispatch();\r\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n\r\n        if(id === 'status') dispath(addSearchStatus(event.target.value as StatusType |  TotalType |PositionType))\r\n        else if(id === 'total')dispath(addSearchTotal(event.target.value as StatusType |  TotalType |PositionType))\r\n        else dispath(addSearchPosition(event.target.value as StatusType |  TotalType |PositionType))\r\n        setValue(event.target.value as StatusType |  TotalType | PositionType | '')\r\n        setCloseFilteredIcon(false);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const resetFilter =  () => {\r\n        if(id === 'status') dispath(addSearchStatus(''))\r\n        else if(id === 'total') dispath(addSearchTotal(''))\r\n        else dispath(addSearchPosition(''))\r\n        setCloseFilteredIcon(false);\r\n        setValue('')\r\n    }\r\n    return (\r\n        <div className={filtered ? style.open : style.close}>\r\n\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id={optionsArray[0] + 'label'}>Фильтр</InputLabel>\r\n                <Select\r\n                    labelId={optionsArray[0] + 'label'}\r\n                    id={optionsArray[0] }\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    onOpen={handleOpen}\r\n                    defaultValue={''}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                >\r\n                    {\r\n                        optionsArray && optionsArray.map((el:StatusType |  TotalType | PositionType, index:number) => {\r\n                            return (\r\n                                <MenuItem key={el + index} value={el}>{el}</MenuItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n            <Button color=\"secondary\" onClick={resetFilter}>Reset</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectedHeader\r\n","import React, {FC, useState} from 'react';\r\nimport style from \"../../pages/Main/TablePage.module.scss\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport SelectedHeader from \"../selected/SelectedHeader\";\r\nimport {PositionType, StatusEnum, TotalEnum} from \"../../store/TableReducer/TableType\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\n\r\ntype BropsType = {\r\n   optionsArray: StatusEnum[] | TotalEnum[] | PositionType[];\r\n   id: string\r\n}\r\n\r\n\r\nconst FilteredHeader:FC<BropsType> = ({optionsArray, id}) => {\r\n    const [open, setOpen] = useState<boolean>(false)\r\n    const {searchTotal, searchStatus,searchPosition } = useSelector((state: AppRootStateType) => state.tableRows)\r\n    const {disabledBtn} = useSelector((state: AppRootStateType) => state.app)\r\n\r\n    return (\r\n        <>\r\n            <div className={style.close}>\r\n                <IconButton disabled={disabledBtn} aria-label=\"delete\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                    <FilterListIcon fontSize={'small'}/>\r\n                </IconButton>\r\n                 <span className={`${style.fileredSpan} ${id === 'status' && searchStatus !== '' ? style.fileredSpanOpen : style.fileredSpanClose}` }>!</span>\r\n                 <span className={`${style.fileredSpan} ${id === 'total' && searchTotal !== '' ? style.fileredSpanOpen : style.fileredSpanClose}` }>!</span>\r\n                 <span className={`${style.fileredSpan} ${id === 'position' && searchPosition !== '' ? style.fileredSpanOpen : style.fileredSpanClose}` }>!</span>\r\n            </div>\r\n            <SelectedHeader filtered={open}\r\n                            optionsArray={optionsArray}\r\n                            id={id}\r\n                            setCloseFilteredIcon={setOpen}\r\n/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FilteredHeader;","import {PositionEnum, StatusEnum, TotalEnum} from \"../store/TableReducer/TableType\";\r\n\r\nexport const optionsArrayStatus = [StatusEnum.OK, StatusEnum.NO, StatusEnum.THINK]\r\nexport const optionsArrayTotal = [TotalEnum.OFER, TotalEnum.CANSEL, TotalEnum.CANSEL_LID, TotalEnum.TRANING]\r\nexport const optionsArrayPosition= [PositionEnum.KARATIST, PositionEnum.SLESAR, PositionEnum.PRESIDENT, PositionEnum.TRACTORIS]","import {useStyles} from \"@material-ui/x-grid-data-generator/dist/cjs/_modules_/grid/components/containers/GridRootStyles\";\r\nimport React from \"react\";\r\nimport {Order, OrderEnum, TypeSort} from \"../../store/TableReducer/TableType\";\r\nimport {IconButton, TableHead} from \"@material-ui/core\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport {headCells} from \"../../data\";\r\nimport style from \"../../pages/Main/TablePage.module.scss\";\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport FilteredHeader from \"./FilteredHeader\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {optionsArrayPosition, optionsArrayStatus, optionsArrayTotal} from \"../../utils/ConstOptions\";\r\n\r\ninterface EnhancedTableProps {\r\n    classes?: ReturnType<typeof useStyles>;\r\n    numSelected: number;\r\n    onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n    rowCount: number;\r\n    onRequestSort: (typeSorting: string, sortByValue: Order, keyValue: string) => void;\r\n    order: Order,\r\n\r\n}\r\n\r\n\r\nfunction TableHeader(props: EnhancedTableProps) {\r\n    const {onRequestSort } = props;\r\n\r\n    const {disabledBtn} = useSelector((state: AppRootStateType) => state.app)\r\n\r\n\r\n    function handlerSorting(typeSorting: TypeSort | null, sortByValue: Order, keyValue: string) {\r\n        if (typeSorting === null) return\r\n\r\n        onRequestSort(typeSorting, sortByValue, keyValue)\r\n    }\r\n\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'left' : \"center\" }\r\n\r\n                    >\r\n\r\n                        <div className={style.divHeader}>\r\n                            {headCell.label}\r\n                            <div className={`${style.wrappedFilter}`}>\r\n                                {headCell.label === 'Итог' ?\r\n                                    <>\r\n                                        <FilteredHeader optionsArray={optionsArrayStatus} id={headCell.id}/>\r\n                                    </>\r\n\r\n                                    : null\r\n                                }\r\n                                {\r\n                                    headCell.label === 'Итог2.0' ?\r\n                                        <>\r\n                                            <FilteredHeader optionsArray={optionsArrayTotal} id={headCell.id}/>\r\n                                        </>\r\n\r\n                                        : null\r\n                                }\r\n                                {\r\n                                    headCell.label === 'Должность' ?\r\n                                        <>\r\n                                            <FilteredHeader optionsArray={optionsArrayPosition} id={headCell.id}/>\r\n                                        </>\r\n\r\n                                        : null\r\n                                }\r\n\r\n                            </div>\r\n                            {headCell.sorting\r\n                                ? props.order === OrderEnum.ASC\r\n                                    ? <div>\r\n                                        <IconButton aria-label=\"delete\"\r\n                                                    size=\"small\"\r\n                                                    disabled={disabledBtn}\r\n                                                    onClick={() => handlerSorting(headCell.typeSorting, OrderEnum.DESK, headCell.id)}>\r\n                                            <ArrowDownwardIcon fontSize=\"inherit\"/>\r\n                                        </IconButton>\r\n\r\n                                    </div>\r\n                                    : <div>\r\n                                        <IconButton aria-label=\"delete\"\r\n                                                    size=\"small\"\r\n                                                    disabled={disabledBtn}\r\n                                                    onClick={() => handlerSorting(headCell.typeSorting, OrderEnum.ASC, headCell.id)}>\r\n                                            <ArrowUpwardIcon fontSize=\"inherit\"/>\r\n                                        </IconButton>\r\n                                    </div>\r\n                                : null\r\n                            }\r\n                        </div>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nexport default TableHeader;","import {createStyles, makeStyles, Theme, useTheme} from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nconst useStyles1 = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexShrink: 0,\r\n            marginLeft: theme.spacing(2.5),\r\n        },\r\n    }),\r\n);\r\n\r\ninterface TablePaginationActionsProps {\r\n    count: number;\r\n    page: number;\r\n    rowsPerPage: number;\r\n    onChangePage: (event: React.MouseEvent<HTMLButtonElement>, newPage: number) => void;\r\n\r\n}\r\nexport  default function TablePaginationActions(props: TablePaginationActionsProps) {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const {count, page, rowsPerPage, onChangePage} = props;\r\n\r\n    const handleFirstPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        onChangePage(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        onChangePage(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        onChangePage(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <LastPageIcon/> : <FirstPageIcon/>}\r\n            </IconButton>\r\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight/> : <KeyboardArrowLeft/>}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft/> : <KeyboardArrowRight/>}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <FirstPageIcon/> : <LastPageIcon/>}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}","import React, {FC, useState} from 'react';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport {PositionType, StatusEnum, StatusType, TotalEnum, TotalType} from \"../../store/TableReducer/TableType\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {createStyles, IconButton} from \"@material-ui/core\";\r\nimport {makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\ninterface PropsType {\r\n    optionsArray: StatusEnum[] | TotalEnum[]\r\n    id: string\r\n    onChanges: (newValue: string, id: string) => void\r\n\r\n    title: string\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        margin: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        extendedIcon: {\r\n            marginRight: theme.spacing(1),\r\n        },\r\n    }),\r\n);\r\n\r\nconst EditableStatusTotal: FC<PropsType> = ({id, optionsArray, onChanges, title}) => {\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const [openControl, setOpenControl] = useState<boolean>(false)\r\n    const [value, setValue] = useState<string>('');\r\n    const classes = useStyles();\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setValue(event.target.value as StatusType | TotalType | '')\r\n    }\r\n    const saveChanges = () => {\r\n        setOpenControl(false)\r\n        onChanges(value, id)\r\n    }\r\n    return (\r\n        <>\r\n            {openControl\r\n                ? <>\r\n                    <FormControl>\r\n\r\n                        <Select\r\n                            labelId={optionsArray[0] + 'label'}\r\n                            id={optionsArray[0]}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            onOpen={handleOpen}\r\n                            defaultValue={''}\r\n                            value={value}\r\n                            onChange={handleChange}\r\n                        >\r\n                            {\r\n                                optionsArray && optionsArray.map((el: StatusType | TotalType | PositionType, index: number) => {\r\n                                    return (\r\n                                        <MenuItem key={el + index} value={el}>{el}</MenuItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                    <IconButton  className={classes.margin} size=\"small\" onClick={saveChanges} >\r\n                        <SaveIcon fontSize=\"inherit\"/>\r\n                    </IconButton>\r\n                </>\r\n                : title\r\n            }\r\n            <IconButton aria-label=\"expand row\" className={classes.margin} size=\"small\" onClick={() => setOpenControl(!openControl)} >\r\n                {openControl ? <ArrowUpwardIcon fontSize=\"inherit\"/> : <ArrowDownwardIcon fontSize=\"inherit\"/>}\r\n            </IconButton>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditableStatusTotal;","import React, {ChangeEvent, FC, useState} from 'react';\r\nimport {Checkbox, FormControlLabel, IconButton} from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport cls from './EditableMitingLeader.module.scss'\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {StatusFetchEnum} from \"../../store/TableReducer/TableType\";\r\n\r\n\r\ninterface PropsType {\r\n    cheched: boolean |null\r\n    onChangeBoolean: (value:boolean, id:string) => void\r\n    id: string\r\n}\r\nconst EditableMitingLeader:FC<PropsType> = ({cheched, onChangeBoolean, id}) => {\r\n    const [check, setCheck] = useState<boolean>(cheched  !== null ? cheched : false)\r\n    const [openControl, setOpenControl] = useState<boolean>(false)\r\n    const {status}  = useSelector((state: AppRootStateType) => state.auth)\r\n    const onChangeHandler = (e:ChangeEvent<HTMLInputElement>) => {\r\n        setCheck(e.currentTarget.checked)\r\n    }\r\n    const saveChanges = () => {\r\n        setOpenControl(false)\r\n        onChangeBoolean(check, id)\r\n    }\r\n    if(status === StatusFetchEnum.LOADING) return <div/>\r\n    return (\r\n        <div className={cls.wrapper}>\r\n            {openControl ?\r\n                <>\r\n                    <FormControlLabel\r\n                        control={<Checkbox\r\n                            checked={check}\r\n                            onChange={onChangeHandler}\r\n                        />}\r\n                        label=\"Встреча\"\r\n                    />\r\n                    <IconButton   size=\"small\" onClick={saveChanges} >\r\n                        <SaveIcon fontSize=\"inherit\"/>\r\n                    </IconButton>\r\n                </>\r\n                : cheched === null ? null : cheched ? <CheckIcon/> : <CloseIcon/>\r\n            }\r\n            <IconButton aria-label=\"expand row\"  size=\"small\" onClick={() => setOpenControl(!openControl)} >\r\n                {openControl ? <ArrowUpwardIcon fontSize=\"inherit\"/> : <ArrowDownwardIcon fontSize=\"inherit\"/>}\r\n            </IconButton>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditableMitingLeader;","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Box, Checkbox, CircularProgress, createMuiTheme, ThemeProvider} from \"@material-ui/core\";\r\nimport EnhancedTableToolbar from \"./EnhancedTableToolbar \";\r\nimport style from './TablePage.module.scss'\r\nimport {\r\n    Order,\r\n    OrderEnum,\r\n    SortEnum,\r\n    StatusFetchEnum,\r\n    StatusType,\r\n    TableRowType,\r\n    TotalType\r\n} from '../../store/TableReducer/TableType';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport EditableSpanText from \"../../components/EditableSpanText/EditableSpanText\";\r\nimport TableHeader from \"../../components/TableHeader/TableHeader\";\r\nimport TablePaginationActions from '../../components/TablePaginator/TablePaginator';\r\nimport {currentDate, setYear, smartSorting} from \"../../helper/helper\";\r\nimport {editRecommendationValue, getPacksThunk, updatePack} from \"../../store/TableReducer/TableReducer\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {RoutingType} from \"../../routes/Routes\";\r\nimport EditableStatusTotal from \"../../components/EditableSpanText/EditableStatusTotal\";\r\nimport {optionsArrayStatus, optionsArrayTotal} from \"../../utils/ConstOptions\";\r\nimport EditableMitingLeader from \"../../components/EditableSpanText/EditableMitingLeader\";\r\n\r\n\r\nconst theme = createMuiTheme({\r\n    overrides: {\r\n        MuiTableCell: {\r\n            root: {\r\n                padding: '10px'\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n\r\nconst useStyles2 = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            padding: '10px'\r\n        },\r\n        paper: {\r\n            width: '100%',\r\n            marginBottom: theme.spacing(2),\r\n        },\r\n        table: {\r\n            minWidth: 750,\r\n        },\r\n        visuallyHidden: {\r\n            border: 0,\r\n            clip: 'rect(0 0 0 0)',\r\n            height: 1,\r\n            margin: -1,\r\n            overflow: 'hidden',\r\n            padding: 0,\r\n            position: 'absolute',\r\n            top: 20,\r\n            width: 1,\r\n        },\r\n    }),\r\n);\r\n\r\n\r\nconst TablePage = () => {\r\n    const classes = useStyles2();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [selected, setSelected] = React.useState<string[]>([]);\r\n    const [order, setOrder] = React.useState<Order>(OrderEnum.ASC);\r\n    const [orderBy, setOrderBy] = React.useState<string>('name');\r\n    const [typeSort, setTypeSort] = React.useState<string>('string');\r\n    const [currentsearchName, setCurrentSearchName] = useState<string>('')\r\n\r\n    const {\r\n        status,\r\n        searchTotal,\r\n        searchStatus,\r\n        rows,\r\n        searchPosition\r\n    } = useSelector((state: AppRootStateType) => state.tableRows)\r\n    const {disabledBtn} = useSelector((state: AppRootStateType) => state.app)\r\n    const {isLogin} = useSelector((state: AppRootStateType) => state.auth)\r\n    const profile = useSelector((state: AppRootStateType) => state.profile.profile)\r\n    const dispatch = useDispatch();\r\n    const stableDispatch = useCallback(dispatch, [dispatch])\r\n    // selected\r\n    useEffect(() => {\r\n        if (isLogin && profile) stableDispatch(getPacksThunk(profile._id))\r\n        else return\r\n    }, [searchTotal, searchStatus, stableDispatch, isLogin, profile, searchPosition])\r\n\r\n    if (!isLogin) {\r\n        return <Redirect to={RoutingType.LOGIN}/>\r\n    }\r\n    const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = rows.map((n: TableRowType) => n.name);\r\n            console.log(newSelecteds)\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected: string[] = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n\r\n    const handleChangeRowsPerPage = (\r\n        event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    ) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const testSotr = (typeSorting: string, sortByValue: Order, keyValue: string) => {\r\n        setTypeSort(typeSorting)\r\n        setOrder(sortByValue)\r\n        setOrderBy(keyValue)\r\n\r\n    }\r\n\r\n\r\n    const changeInputSsHandler = (ssValue: string, id: string) => {\r\n        console.log(ssValue)\r\n        const currentSs = setYear(ssValue.split('.').join('-'))\r\n        console.log(currentSs)\r\n        if (currentSs !== null) {\r\n            dispatch(updatePack({SS: currentSs, _id: id}))\r\n        }\r\n    }\r\n\r\n    const filteredByName = rows.filter(el => {\r\n        return el.name.toLowerCase().includes(currentsearchName.toLowerCase())\r\n    })\r\n    const changeInputRecHandler = (recommendation: string, id: string) => {\r\n        if(recommendation.trim() !== '') {\r\n            dispatch(updatePack({recommendation, _id: id}))\r\n\r\n            dispatch(editRecommendationValue(recommendation, id))\r\n        } else {\r\n            return\r\n        }\r\n\r\n    }\r\n    const changeInputStatus = (value:string, _id:string) => {\r\n        const status = value as StatusType\r\n        dispatch(updatePack({status, _id}))\r\n    }\r\n    const changeInputTotal = (value:string, _id:string) => {\r\n        const total = value as TotalType\r\n        dispatch(updatePack({total, _id}))\r\n    }\r\n    const changeMeetingCheck = (value: boolean, _id:string) => {\r\n        console.log(value)\r\n        dispatch(updatePack({meeting:value, _id}))\r\n    }\r\n    const changeLeaderCheck = (value: boolean, _id:string) => {\r\n        dispatch(updatePack({leaderInterview:value, _id}))\r\n    }\r\n\r\n\r\n    const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n    return (\r\n        <Box margin={1}>\r\n            <Paper>\r\n                <ThemeProvider theme={theme}>\r\n                    <EnhancedTableToolbar numSelected={selected.length} selected={selected} setSelected={setSelected}\r\n                                          setCurrentSearchName={setCurrentSearchName}/>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                            <TableHeader\r\n                                onSelectAllClick={handleSelectAllClick}\r\n                                rowCount={rows.length}\r\n                                numSelected={selected.length}\r\n                                onRequestSort={testSotr}\r\n                                classes={classes}\r\n                                order={order}\r\n\r\n                            />\r\n                            {status === StatusFetchEnum.LOADING ?\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell style={{width: 100}}>\r\n                                            <div className={style.divSpinner}><CircularProgress/></div>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                                : <TableBody>\r\n                                    {(rowsPerPage > 0\r\n                                            ? smartSorting(filteredByName, typeSort, order, orderBy).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : smartSorting(filteredByName, typeSort, order, orderBy)\r\n                                    ).map((row, index) => {\r\n                                            const isItemSelected = isSelected(row._id);\r\n\r\n                                            const labelId = `enhanced-table-checkbox-${index}`;\r\n                                            return (\r\n\r\n                                                <TableRow key={row._id}\r\n                                                          tabIndex={-1}\r\n                                                          role=\"checkbox\"\r\n                                                          hover\r\n                                                          selected={isItemSelected}\r\n\r\n                                                >\r\n                                                    <TableCell padding=\"checkbox\">\r\n                                                        <Checkbox\r\n                                                            checked={isItemSelected}\r\n                                                            disabled={disabledBtn}\r\n                                                            inputProps={{'aria-labelledby': labelId}}\r\n                                                            onClick={(event) => handleClick(event, row._id)}\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                    <TableCell style={{width: 100}} component=\"th\" scope=\"row\" id={labelId}\r\n                                                               align=\"center\">\r\n                                                        {currentDate.format(new Date(row.date))}\r\n                                                    </TableCell>\r\n                                                    <TableCell style={{width: 60}} align=\"center\">\r\n                                                        {row.time}\r\n                                                    </TableCell>\r\n                                                    <TableCell style={{width: 80}} align=\"center\">\r\n                                                        {row.position}\r\n                                                    </TableCell>\r\n                                                    <TableCell style={{width: 160}} align=\"center\">\r\n                                                        {row.name}\r\n                                                    </TableCell>\r\n                                                    <TableCell style={{width: 160}} align=\"center\">\r\n                                                        {row.phone}\r\n                                                    </TableCell>\r\n                                                    <TableCell style={{width: 100}} align=\"center\">\r\n                                                        <EditableMitingLeader cheched={row.meeting} onChangeBoolean={changeMeetingCheck} id={row._id}/>\r\n                                                    </TableCell>\r\n                                                    <TableCell style={{width: 120}} align=\"center\">\r\n                                                        <EditableStatusTotal id={row._id} title={row.status} optionsArray={optionsArrayStatus} onChanges={changeInputStatus}/>\r\n                                                    </TableCell>\r\n                                                    <TableCell style={{width: 160}} align=\"left\">\r\n                                                        <EditableSpanText\r\n                                                            value={row.recommendation}\r\n                                                            idRow={row._id}\r\n                                                            blured={true}\r\n                                                            onChanges={changeInputRecHandler}\r\n                                                            typeSpan={SortEnum.STRING}\r\n                                                        />\r\n\r\n                                                    </TableCell>\r\n                                                    <TableCell style={{width: 100}} align=\"center\">\r\n                                                        <EditableMitingLeader cheched={row.leaderInterview} onChangeBoolean={changeLeaderCheck} id={row._id}/>\r\n                                                    </TableCell>\r\n                                                    <TableCell style={{width: 100}} align=\"center\">\r\n                                                       <EditableStatusTotal id={row._id} title={row.total} optionsArray={optionsArrayTotal} onChanges={changeInputTotal}/>\r\n                                                    </TableCell>\r\n                                                    <TableCell style={{width: 100}} align=\"center\">\r\n                                                        <EditableSpanText\r\n                                                            value={row.SS ? row.SS.slice(0, 10).split('-').join('.') : ''}\r\n                                                            blured={true}\r\n                                                            onChanges={changeInputSsHandler}\r\n                                                            idRow={row._id}\r\n                                                            typeSpan={SortEnum.DATE}\r\n                                                        />\r\n\r\n                                                    </TableCell>\r\n\r\n                                                </TableRow>\r\n                                            )\r\n                                        }\r\n                                    )}\r\n\r\n                                </TableBody>\r\n                            }\r\n\r\n                            <TableFooter>\r\n                                <TableRow>\r\n                                    <TablePagination\r\n                                        rowsPerPageOptions={[5, 10, 25, {label: 'All', value: -1}]}\r\n                                        colSpan={9}\r\n                                        count={rows.length}\r\n                                        rowsPerPage={rowsPerPage}\r\n                                        page={page}\r\n                                        onChangePage={handleChangePage}\r\n                                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                        ActionsComponent={TablePaginationActions}\r\n                                    />\r\n                                </TableRow>\r\n                            </TableFooter>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </ThemeProvider>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n}\r\nexport default TablePage","import React, {FC} from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\r\nimport {makeStyles, Theme} from '@material-ui/core/styles';\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\ninterface PropsType {\r\n    open:boolean\r\n    handleClose: (event?: React.SyntheticEvent, reason?: string) =>  void\r\n}\r\nconst SnackbarRoot:FC<PropsType> = ({open, handleClose}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    Пользователь успешно добавлен!\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SnackbarRoot;","import React, {useState} from 'react';\r\nimport {PositionEnum, PositionType, StatusFetchEnum} from \"../../store/TableReducer/TableType\";\r\nimport {useFormik} from \"formik\";\r\nimport {addNewCandidate} from \"../../store/TableReducer/TableReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, CircularProgress, FormControl, TextField} from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputMask from \"react-input-mask\";\r\nimport {FormGroup} from '@material-ui/core';\r\nimport cls from './AddNewPage.module.scss'\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport SnackbarRoot from \"../../components/SnackbarRoot/SnackbarRoot\";\r\n\r\n\r\nconst AddNewPage = () => {\r\n    const dispatch = useDispatch();\r\n    const {status} = useSelector((state:AppRootStateType) => state.auth)\r\n    const [first, setFist] = useState<boolean>(true)\r\n    const [open, setOpen] = useState(false);\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    type FormikErrorType = {\r\n        name?: string\r\n        surname?: string\r\n        address?: string\r\n        phone?: string\r\n        other?: string\r\n    }\r\n    const optionsArrayPosition = [PositionEnum.KARATIST, PositionEnum.SLESAR, PositionEnum.PRESIDENT, PositionEnum.TRACTORIS]\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            date: '',\r\n            time: '',\r\n            name: '',\r\n            position: PositionEnum.KARATIST as PositionType,\r\n            phone: ''\r\n\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (values.phone.replace(/_/gm, '').length <= 16) {\r\n                errors.phone = 'Invalid phone'\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            console.log(values)\r\n\r\n            const newObject = {\r\n                date: values.date,\r\n                name: values.name,\r\n                time: values.time,\r\n                position: values.position,\r\n                phone: values.phone\r\n            }\r\n\r\n            dispatch(addNewCandidate(newObject))\r\n            setFist(false)\r\n            setOpen(true)\r\n            formik.resetForm();\r\n        },\r\n\r\n    });\r\n    return (\r\n        <div className={cls.container}>\r\n\r\n            <form onSubmit={formik.handleSubmit}>\r\n                {!first && status === StatusFetchEnum.OK\r\n                    ? <SnackbarRoot open={open} handleClose={handleClose} />\r\n                    : null\r\n                }\r\n\r\n                <FormControl>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            id=\"date\"\r\n                            label=\"Дата\"\r\n                            type=\"date\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            {...formik.getFieldProps('date')}\r\n                        />\r\n                        <TextField\r\n                            id=\"time\"\r\n                            label=\"Время\"\r\n                            type=\"time\"\r\n\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            inputProps={{\r\n                                step: 300, // 5 min\r\n                            }}\r\n                            {...formik.getFieldProps('time')}\r\n                        />\r\n\r\n                        <TextField\r\n                            select\r\n                            label=\"Должность\"\r\n                            variant=\"standard\"\r\n                            margin=\"normal\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            {...formik.getFieldProps('position')}\r\n                        >\r\n                            {optionsArrayPosition.map((option) => (\r\n                                <MenuItem key={option} value={option}>\r\n                                    {option}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n\r\n                        <TextField required label=\"ФИО\" {...formik.getFieldProps('name')}/>\r\n                        <InputMask\r\n                            mask=\"+7(999) 999-99-99\"\r\n                            required\r\n                            disabled={false}\r\n                            {...formik.getFieldProps('phone')}\r\n                        >\r\n                            {(a: any) => {\r\n                                return <TextField label=\"Phone\" {...a} />\r\n                            }}\r\n                        </InputMask>\r\n                        {formik.touched &&\r\n                        formik.errors.phone ? <div style={{color: 'red'}}>{formik.errors.phone}</div> : null}\r\n                    </FormGroup>\r\n                    <Button type={'submit'} variant={'contained'} color={'primary'} className={cls.btn}>Добавить</Button>\r\n                </FormControl>\r\n            </form>\r\n            { status === StatusFetchEnum.LOADING?  <CircularProgress/> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddNewPage;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useFormik} from 'formik';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setLoginT} from \"../../store/AuthReducer/AuthReducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RoutingType} from \"../../routes/Routes\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport default function Auth() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const {isLogin} =  useSelector((state: AppRootStateType) => state.auth)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: 'yury.grush@gmail.com',\r\n            password: '223044ss',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 6) {\r\n                errors.password = 'Password has been 6 length'\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            const {email, password, rememberMe} = values\r\n            dispatch(setLoginT(email, password, rememberMe))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    if( isLogin) {\r\n        return <Redirect to={RoutingType.MAIN}/>\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        label=\"Email\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        {...formik.getFieldProps('email')}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    {formik.touched &&\r\n                    formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> : null}\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        autoComplete=\"current-password\"\r\n                        fullWidth\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        margin=\"normal\"\r\n                        {...formik.getFieldProps('password')}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    {formik.touched &&\r\n                    formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\r\n                    <FormControlLabel\r\n                        label={'Remember me'}\r\n                        color=\"primary\"\r\n                        control={<Checkbox/>}\r\n                        {...formik.getFieldProps('rememberMe')}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import {TableRowType} from \"../TableReducer/TableType\";\r\nimport {v4} from 'uuid'\r\n\r\ntype StatisticTableTypeInit = {\r\n    statisticArray: tableStattistic[]\r\n}\r\nexport type tableStattistic = {\r\n    id: string\r\n    rowStatist: TableRowType[] | []\r\n}\r\n\r\nconst initialState: StatisticTableTypeInit = {\r\n    statisticArray:[]\r\n} as StatisticTableTypeInit\r\n\r\nenum ActionType {\r\n    ADD_NEW_STATISTIC_TABLE = 'ADD_NEW_STATISTIC_TABLE',\r\n    SET_FILER_TABLE = 'SET_FILER_TABLE',\r\n    DELETE_STATISTIC_TABLE = 'DELETE_STATISTIC_TABLE'\r\n}\r\n\r\nexport type statisticActionType = ReturnType<typeof addNewStatisticTable> | ReturnType<typeof setFiler>| ReturnType<typeof deleteStatistic>\r\n\r\nexport const StatisticReducer = (state: StatisticTableTypeInit = initialState, action: statisticActionType) => {\r\n    switch (action.type) {\r\n        case ActionType.ADD_NEW_STATISTIC_TABLE:\r\n            return {\r\n                ...state,\r\n                statisticArray: [...state.statisticArray, {id: action.id, rowStatist: []}]\r\n            }\r\n        case ActionType.SET_FILER_TABLE:\r\n\r\n            const table = state.statisticArray.find(el => el.id === action.id)\r\n            if(table) {\r\n                const newEl = {...table, rowStatist:[...action.rowStatist]} as tableStattistic\r\n                return {\r\n                    ...state,\r\n                    statisticArray:state.statisticArray.map(\r\n                        el => el.id === action.id\r\n                            ? newEl\r\n                            : el\r\n                    )\r\n                }\r\n            }else {\r\n                return  state\r\n            }\r\n        case ActionType.DELETE_STATISTIC_TABLE:\r\n            return {...state, statisticArray: state.statisticArray.filter(el =>  el.id !== action.id)}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addNewStatisticTable = () => {\r\n    return {\r\n        type: ActionType.ADD_NEW_STATISTIC_TABLE, id: v4()\r\n    } as const\r\n}\r\nexport const setFiler = (rowStatist: TableRowType[] | [], id:string) =>  {\r\n    return{type:ActionType.SET_FILER_TABLE, rowStatist, id} as const\r\n}\r\nexport const deleteStatistic = (id: string) => ({type:ActionType.DELETE_STATISTIC_TABLE, id} as const)\r\n\r\n\r\n","import React, {FC} from 'react';\r\nimport {Route, Switch } from 'react-router-dom';\r\nimport EditPage from \"../pages/EdditPage/EdditPage\";\r\nimport TablePage from \"../pages/Main/TablePage\";\r\nimport AddNewPage from \"../pages/AddNewPage/AddNewPage\";\r\nimport Auth from \"../pages/Auth/Auth\";\r\nimport Statistic from \"../pages/Statistic/Statistic\";\r\n\r\n\r\n\r\nexport enum RoutingType{\r\n    MAIN='/',\r\n    EDIT='/edit',\r\n    ADD='/add',\r\n    LOGIN='/login',\r\n    STATISTIC='/statistic'\r\n}\r\n\r\n\r\n\r\nconst Routes:FC = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route exact path={RoutingType.MAIN} render={() => <TablePage/>}/>\r\n                <Route exact path={`${RoutingType.EDIT}`} render={() => <EditPage/>}/>\r\n                <Route exact path={`${RoutingType.ADD}`} render={() => <AddNewPage/>}/>\r\n                <Route exact path={`${RoutingType.LOGIN}`} render={() => <Auth/>}/>\r\n                <Route exact path={`${RoutingType.STATISTIC}`} render={() => <Statistic/>}/>\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React, {FC, useState} from 'react';\r\nimport {Button, Collapse, IconButton, Paper, TextField} from \"@material-ui/core\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport {PositionType, TableRowType} from \"../../store/TableReducer/TableType\";\r\nimport cls from './Row.module.scss'\r\n\r\n\r\ntype PropsTypeArray =\r\n    {\r\n        [key: string]: any\r\n        arrayCandidate: TableRowType []\r\n        totalComming: number\r\n        position: PositionType\r\n        totalPosition: number\r\n        totalCommingJob: number\r\n        totalSucsesStatus: number\r\n        totalSucsesTotal: number\r\n\r\n    }\r\n\r\ntype PropsType = {\r\n\r\n    statisticPosition: PropsTypeArray\r\n}\r\n\r\nconst Row:FC<PropsType> = ({statisticPosition}) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [budget, setBudget] = useState<number>(0)\r\n    const [currentBudjet, setCurrentBudjet] = useState<number>(0)\r\n    const [openSiting, setOpenSiting] = useState<boolean>(false)\r\n    const mappedKeys = Object.keys(statisticPosition).filter(el =>  el !== 'position' && el !== \"arrayCandidate\")\r\n    const changeHandlerBudget= (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n        setBudget(+e.currentTarget.value)\r\n    }\r\n    const onClickHandler = () => {\r\n        setCurrentBudjet(budget)\r\n    }\r\n    const procentNum = (num: number) => {\r\n        if(num === 0) return 0\r\n       return  Math.round(currentBudjet / num)\r\n    }\r\n    const mathProcent = (current: number) => {\r\n        if(statisticPosition.totalPosition === 0) return 0\r\n        return Math.round( (current / statisticPosition.totalPosition ) * 100)\r\n    }\r\n    const onCollapsedHandler = () => {\r\n        setOpenSiting(!openSiting)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Paper className={cls.main}>\r\n                <div>\r\n                    {statisticPosition.position}\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                        {open ? <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}\r\n                    </IconButton>\r\n\r\n                    <div className={cls.siting}>\r\n                        {currentBudjet <= 0 ? <span>Бюджет не установлен</span> : <span>Потрачено: {currentBudjet}</span>}\r\n\r\n                        <Button onClick={onCollapsedHandler}>установить Бюджет</Button>\r\n                    </div>\r\n                    <Collapse in={openSiting} timeout=\"auto\" component={'div'}>\r\n                        <TextField\r\n                            className={cls.input}\r\n                            id=\"budget\"\r\n                            label=\"Бюджет\"\r\n                            type=\"number\"\r\n                            defaultValue={budget}\r\n                            onChange={event => changeHandlerBudget(event)}\r\n                        />\r\n                        <Button onClick={onClickHandler}>Save</Button>\r\n                    </Collapse>\r\n                </div>\r\n                <Collapse in={open} timeout=\"auto\" component={'div'}>\r\n\r\n                    <Paper className={cls.statisticWrap}>\r\n                        <div className={cls.wrapTitle}>\r\n                            <div>Сколько приглашено</div>\r\n                            <div>Сколько пришло</div>\r\n                            <div>Сколько подошло</div>\r\n                            <div>Сколько одобрено руководителем</div>\r\n                            <div>Сколько вышло на работу</div>\r\n                        </div>\r\n                        <div className={cls.numWrap}>\r\n                            {mappedKeys.map(el => {\r\n\r\n                                return (\r\n                                    <div className={cls.numStatistic} key={el}>\r\n                                        <div>{statisticPosition[el]}</div>\r\n                                        <div>{mathProcent(statisticPosition[el])}%</div>\r\n                                        <div className={cls.currentBudget}>{currentBudjet <= 0 ? <span>Установите бюджет</span>  : <span >{procentNum(statisticPosition[el])} ₽</span>}</div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </Paper>\r\n\r\n\r\n                </Collapse>\r\n            </Paper>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Row;","import React, {FC} from 'react';\r\nimport {Box, Button, Collapse, Typography} from \"@material-ui/core\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {PositionEnum, PositionType, TableRowType} from \"../../store/TableReducer/TableType\";\r\nimport Row from \"./Row\";\r\nimport cls from './MappedStatistic.module.scss'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {deleteStatistic} from \"../../store/statisticReducer/statisticReducer\";\r\nimport {currentDate} from \"../../helper/helper\";\r\n\r\n\r\ninterface PropsType {\r\n    rowsStatist: TableRowType []\r\n    id:string\r\n    dateStart?: Date | null\r\n    dateFin?: Date | null\r\n}\r\n\r\nconst createDate = (positionArray: PositionType[], rows: TableRowType []) => {\r\n    return positionArray.map(el => {\r\n        const filteredArray = rows.filter(row => el === row.position)\r\n        const totalComing = filteredArray.filter(row => row.meeting)\r\n        const totalSucsesStatus = totalComing.filter(row =>  row.status !== 'отказ')\r\n        const totalSucsesTotal = totalSucsesStatus.filter(row => row.total === 'Выход на работу' || row.total === 'Стажировка')\r\n        const totalCommingJob = totalSucsesTotal.filter(row => row.total === 'Выход на работу')\r\n\r\n\r\n        return {\r\n            position: el,\r\n            totalPosition: filteredArray.length,\r\n            totalComming: totalComing.length,\r\n            totalSucsesStatus: totalSucsesStatus.length,\r\n            totalSucsesTotal: totalSucsesTotal.length,\r\n            totalCommingJob: totalCommingJob.length,\r\n            arrayCandidate: filteredArray\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport type typeDateRows = [\r\n    {\r\n        arrayCandidate: TableRowType []\r\n        no: number\r\n        position: PositionType\r\n        totalPosition: number\r\n        yes: number\r\n    }\r\n]\r\n// const createTotal = (rows: typeDateRows) => {\r\n//     // @ts-ignore\r\n//     return rows.reduce((acc, cur) => {\r\n//         return {\r\n//             totalPosition: acc.totalPosition + cur.totalPosition,\r\n//             yes: acc.yes + cur.yes,\r\n//             no: acc.no + cur.no\r\n//         }\r\n//     })\r\n//\r\n// }\r\n\r\n\r\nconst MappedStatistic: FC<PropsType> = ({rowsStatist, id, dateStart, dateFin}) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const optionsArrayPosition = [PositionEnum.KARATIST, PositionEnum.SLESAR, PositionEnum.PRESIDENT, PositionEnum.TRACTORIS]\r\n    const finDat = createDate(optionsArrayPosition, rowsStatist)\r\n\r\n    const dispatch = useDispatch()\r\n    // const totalPosition = createTotal(finDat as typeDateRows)\r\n    const deleteHandler = () => {\r\n        dispatch(deleteStatistic(id))\r\n    }\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => setOpen(!open)}>\r\n                {!open ? \"Развернуть\" : \"Свернуть\"}\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\" className={cls.btnClose} onClick={deleteHandler}>\r\n                Удалить\r\n            </Button>\r\n\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <Box margin={1}>\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                        Статистика с {dateStart? currentDate.format(new Date(dateStart)) : null} до {dateFin? currentDate.format(new Date(dateFin)) : null}\r\n                    </Typography>\r\n                    <Paper>\r\n                        <div className={cls.wrappItem}>\r\n                            {finDat.map(row => {\r\n                                return (\r\n                                    <Row key={row.position} statisticPosition={row}/>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div>\r\n                            ВСЕЕГО\r\n                        </div>\r\n                    </Paper>\r\n                </Box>\r\n            </Collapse>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MappedStatistic;","import React, {FC, useCallback, useEffect, useState} from 'react';\r\nimport {Button} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setFiler} from \"../../store/statisticReducer/statisticReducer\";\r\nimport MappedStatistic from \"./MappedStatistic\";\r\nimport {getPacksThunk} from \"../../store/TableReducer/TableReducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {TableRowType} from \"../../store/TableReducer/TableType\";\r\nimport {getRowArray} from \"../../utils/selectors\";\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport cls from './StatisticOneTable.module.scss'\r\n\r\n\r\ninterface PropsType {\r\n    id: string,\r\n    rowsStatist: TableRowType [] | []\r\n}\r\n\r\nconst StatisticOneTable: FC<PropsType> = ({id, rowsStatist}) => {\r\n    const [first, setFirst] = useState<boolean>(true)\r\n    const [startSelectedDate, setStartSelectedDate] = React.useState<Date | null>();\r\n    const [finishSelectedDate, setFFfinishStartSelectedDate] = React.useState<Date | null>();\r\n    const test = useSelector((state: AppRootStateType) => state.statistic)\r\n    console.log(test)\r\n    console.log(id)\r\n    const rows = useSelector(getRowArray)\r\n    const dispatch = useDispatch()\r\n    const stableDispatch = useCallback(dispatch, [dispatch])\r\n    const {isLogin} = useSelector((state: AppRootStateType) => state.auth)\r\n    const profile = useSelector((state: AppRootStateType) => state.profile.profile)\r\n    const changeHandlerStart = (date: Date | null) => {\r\n        setStartSelectedDate(date)\r\n    }\r\n    const changeHandlerFinish = (date: Date | null) => {\r\n        setFFfinishStartSelectedDate(date)\r\n    }\r\n    const filterHandler = () => {\r\n        if (finishSelectedDate && startSelectedDate) {\r\n            const ffilter = rows.filter(el => el.date <= finishSelectedDate.toISOString() && el.date >= startSelectedDate.toISOString())\r\n            dispatch(setFiler(ffilter, id))\r\n        }\r\n        setFirst(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isLogin && profile && rows.length === 0) stableDispatch(getPacksThunk(profile._id))\r\n        else return\r\n    })\r\n    return (\r\n        <div>\r\n\r\n            <div className={cls.siting}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-start\"\r\n                        label=\"C\"\r\n                        format=\"MM.dd.yyyy\"\r\n                        autoOk\r\n                        clearable\r\n                        disableFuture\r\n                        value={startSelectedDate}\r\n                        onChange={changeHandlerStart}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                    />\r\n                    <KeyboardDatePicker\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-finish\"\r\n                        label=\"До\"\r\n                        autoOk\r\n                        clearable\r\n                        disableFuture\r\n                        format=\"MM.dd.yyyy\"\r\n                        value={finishSelectedDate}\r\n                        onChange={changeHandlerFinish}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <Button onClick={filterHandler} variant=\"contained\" color=\"primary\" size={'small'}>Сформировать</Button>\r\n            </div>\r\n            <div>\r\n                {rowsStatist && rowsStatist.length > 0\r\n                    ? <MappedStatistic rowsStatist={rowsStatist} id={id} dateStart={startSelectedDate}\r\n                                       dateFin={finishSelectedDate}/>\r\n                    : null\r\n                }\r\n\r\n                {first && rowsStatist && rowsStatist.length === 0\r\n                    ? null\r\n                    : startSelectedDate && finishSelectedDate ?\r\n                        null\r\n                        : rowsStatist && rowsStatist.length > 0 ?\r\n                            <h2>Заполните поля</h2>\r\n                            : null\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatisticOneTable;","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getStatistic} from \"../../utils/selectors\";\r\nimport StatisticOneTable from \"./StatisticOneTable\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport cls from './Statistic.module.scss'\r\nimport {addNewStatisticTable} from \"../../store/statisticReducer/statisticReducer\";\r\n\r\n\r\nconst Statistic = () => {\r\n    const statisticArray = useSelector(getStatistic)\r\n    const dispatch = useDispatch()\r\n    const onClickHandler = () => {\r\n        dispatch(addNewStatisticTable())\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={cls.main}>\r\n            <h1>Статистика</h1>\r\n            <div className={cls.title}>\r\n\r\n                <Button variant=\"contained\" color=\"primary\" onClick={onClickHandler}>Добавить период</Button>\r\n            </div>\r\n            <div className={cls.content}>\r\n                {statisticArray  && statisticArray.length > 0\r\n                    ? statisticArray.map((el) => {\r\n                        return (\r\n                            <StatisticOneTable key={el.id} id={el.id} rowsStatist={el.rowStatist}/>\r\n                        )\r\n                    })\r\n                    : <div>Статистика пуста добавьте период</div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Statistic;","\r\nimport React, {FC} from 'react';\r\nimport s from './BackDrop.module.scss';\r\n\r\ninterface PropsType {\r\n    onClose: () => void\r\n}\r\n\r\nconst BackDrop:FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.BackDrop} onClick={props.onClose}/>\r\n    )\r\n}\r\n\r\n\r\nexport default BackDrop;","import React from \"react\";\r\nimport s from './MenuToggle.module.scss';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {RoutingType} from \"../../routes/Routes\";\r\nimport BackDrop from \"./BackDrop/BackDrop\";\r\ntype MenuToggleType = {\r\n    onClose: () => void\r\n    isOpen: boolean\r\n}\r\n\r\n\r\nconst MenuToggle = (props:MenuToggleType) => {\r\n    const cls = [\r\n        s.Header\r\n    ]\r\n\r\n    if (!props.isOpen){\r\n        cls.push(s.close)\r\n    }\r\n    const clickHandler = () => {\r\n        props.onClose()\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n            <nav className={cls.join(' ')}>\r\n                <div className={s.wrapper}>\r\n                    <NavLink\r\n                        exact to={RoutingType.MAIN}\r\n                        activeClassName={s.active}\r\n                        onClick={clickHandler}>Главная</NavLink>\r\n                    <NavLink\r\n                        to={RoutingType.LOGIN}\r\n                        activeClassName={s.active}\r\n                        onClick={clickHandler}>Авторизация</NavLink>\r\n                    <NavLink\r\n                        to={RoutingType.ADD}\r\n                        activeClassName={s.active}\r\n                        onClick={clickHandler}>Добавить кандидата</NavLink>\r\n                    <NavLink\r\n                        to={RoutingType.STATISTIC}\r\n                        activeClassName={s.active}\r\n                        onClick={clickHandler}>Статистика</NavLink>\r\n                </div>\r\n            </nav>\r\n            {props.isOpen ? <BackDrop onClose={props.onClose}/> : null}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MenuToggle","import {AppBar, createStyles, IconButton, makeStyles, Theme, Toolbar} from '@material-ui/core';\r\nimport React, {FC} from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n    }),\r\n);\r\ntype MenuToggleType = {\r\n    onToggle: () => void\r\n    isOpen: boolean\r\n}\r\nconst Header:FC<MenuToggleType> = ({isOpen, onToggle}) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <AppBar >\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={onToggle} >\r\n                        {!isOpen ? <MenuIcon /> : <CloseIcon/>}\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, {useState} from \"react\";\r\nimport s from './Layout.module.scss';\r\nimport MenuToggle from \"../menuToggle\";\r\nimport Header from \"../../Header\";\r\nimport Routes from \"../../../routes/Routes\";\r\n\r\n\r\nconst Layout = () => {\r\n    const [menu, setMenu] = useState(false)\r\n    const toggleMenuHandler = () => {\r\n        setMenu(!menu)\r\n    }\r\n    const menuCloseHandler = () => {\r\n        setMenu(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.Layout}>\r\n            <Header onToggle={toggleMenuHandler}\r\n                    isOpen={menu}/>\r\n            <div className={s.content}>\r\n                <Routes/>\r\n            </div>\r\n            <MenuToggle\r\n                onClose={menuCloseHandler}\r\n                isOpen={menu}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout;","import React, {useCallback, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setAuthMe} from \"../store/AuthReducer/AuthReducer\";\r\nimport {AppRootStateType} from \"../store/store\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport Layout from \"../components/wrapped/Layout/Layout\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const dispatch = useDispatch();\r\n    const stableDispatch = useCallback(dispatch, [dispatch])\r\n    const isInitial = useSelector((state: AppRootStateType) => state.app.isInitial)\r\n    // selected\r\n    useEffect(() => {\r\n        stableDispatch(setAuthMe())\r\n    }, [stableDispatch])\r\n\r\n    if(!isInitial) {\r\n        return <CircularProgress />\r\n    }\r\n    return (\r\n        <>\r\n            <Layout/>\r\n            {/*<Auth/>*/}\r\n            {/*<TestTable/>*/}\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\";\r\nimport { applyMiddleware } from \"redux\";\r\nimport { createStore } from \"redux\";\r\nimport {AppReducer, AppType} from \"./appReducer/AppReducer\";\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk';\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport {tableActionsType, TableReducer} from \"./TableReducer/TableReducer\";\r\nimport AuthReducer, {AuthType} from \"./AuthReducer/AuthReducer\";\r\nimport ProfileReducer, {ActionProfileType} from \"./AuthReducer/ProfileReducer\";\r\nimport {statisticActionType, StatisticReducer} from \"./statisticReducer/statisticReducer\";\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n    app: AppReducer,\r\n    tableRows: TableReducer,\r\n    auth: AuthReducer,\r\n    profile: ProfileReducer,\r\n    statistic:StatisticReducer\r\n})\r\n\r\nconst middleware = applyMiddleware(thunkMiddleware)\r\n\r\n\r\n\r\nexport const store = createStore(reducer, composeWithDevTools(middleware));\r\n\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducer>\r\nexport type AppActionType = AppType | tableActionsType | AuthType | ActionProfileType | statisticActionType\r\n\r\n\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n    ReturnType,\r\n    AppRootStateType,\r\n    unknown,\r\n    AppActionType\r\n    >\r\n\r\nexport default store\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\n\r\nReactDOM.render(\r\n\r\n      <HashRouter>\r\n          <Provider store={store}>\r\n              <App/>\r\n          </Provider>\r\n      </HashRouter>\r\n,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divHeader\":\"TablePage_divHeader__3YlLU\",\"open\":\"TablePage_open__E5HKc\",\"flexLeft\":\"TablePage_flexLeft__1wVeJ\",\"close\":\"TablePage_close__2V6C8\",\"fileredSpan\":\"TablePage_fileredSpan__1pVTi\",\"fileredSpanOpen\":\"TablePage_fileredSpanOpen__x1Va-\",\"fileredSpanClose\":\"TablePage_fileredSpanClose__2PIft\",\"wrappedFilter\":\"TablePage_wrappedFilter__1XmUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticWrap\":\"Row_statisticWrap__2vwWz\",\"numStatistic\":\"Row_numStatistic__1-0Qw\",\"currentBudget\":\"Row_currentBudget__3I6mB\",\"numWrap\":\"Row_numWrap__hyS8M\",\"input\":\"Row_input__3Kj1p\",\"wrapTitle\":\"Row_wrapTitle__2pP0w\",\"main\":\"Row_main__1Mmp_\",\"siting\":\"Row_siting__2z3mB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"MenuToggle_Header__uHUGi\",\"wrapper\":\"MenuToggle_wrapper__2hDkc\",\"close\":\"MenuToggle_close__b913j\",\"active\":\"MenuToggle_active__fxU63\"};"],"sourceRoot":""}